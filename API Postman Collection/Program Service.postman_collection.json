{
	"info": {
		"_postman_id": "aded7de2-97b1-4ee2-a915-8b9ba9c586b0",
		"name": "Program Service",
		"description": "The Program Service is constructed using iFix specifications and serves as an extensive platform aimed at simplifying program creation, sanction management, fund allocation, and disbursement execution. It equips organizations with essential tools to effectively oversee available funds and guarantee transparent and accountable distribution to designated beneficiaries.\n\nenv-Registy\n\nbase_url is connected to QA\n\nbase_url_2 is connected to Dev",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31932888"
	},
	"item": [
		{
			"name": "program_create-without Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Capture and Parse Response Body\", function () {\r",
							"    \r",
							"    var responseBody = pm.response.json();\r",
							"    var name = responseBody.message.name;\r",
							"    pm.collectionVariables.set(\"name\", name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomNumber = Math.floor(Math.random() * 1000);\r",
							"\r",
							"// Concatenate with word\r",
							"var result = \"MUKTA\" + randomNumber;\r",
							"\r",
							"// Set the result as a variable\r",
							"pm.variables.set(\"randomName\", result)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        // \"program_code\": null,\r\n        \"name\": \"{{randomName}}\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"Empowering local communities through sustainable development projects.\",\r\n        \"start_date\": 1672531200,\r\n        \"end_date\": 1704067200,\r\n        \"children\": null,\r\n        \"status\": {\r\n            \"status_code\": \"ACTIVE\",\r\n            \"status_message\": \"ACTIVE\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"OT-GEN-ECO-SVC\",\r\n        \"administration_code\": \"MU-UD-CUTTACK\",\r\n        \"recipient_segment_code\": \"IND\",\r\n        \"economic_segment_code\": \"CAPEX-IFAS-OTCON\",\r\n        \"source_of_fund_code\": \"CSS\",\r\n        \"target_segment_code\": \"ST\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"OD-DHEN-CTK\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_create-Validation error-message is required",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.requestJsonMessage.message' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be nul\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"\",\r\n        \"action\": \"create\",\r\n        \"message_type\": \"program\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://unified-dev.digit.org/exchange/v1/program\",\r\n        \"receiver_id\": \"{{senderId}}\",\r\n        \"is_msg_encrypted\": false\r\n    }\r\n    // \"message\": [\r\n    //     {\r\n    //         \"location_code\": \"pg\",\r\n    //         \"name\": \"Mukta\",\r\n    //         \"function_code\": null,\r\n    //         \"administration_code\": null,\r\n    //         \"recipient_segment_code\": null,\r\n    //         \"economic_segment_code\": null,\r\n    //         \"source_of_fund_code\": null,\r\n    //         \"target_segment_code\": null,\r\n    //         \"start_date\": 2897897899,\r\n    //         \"end_date\": null,\r\n    //         \"currency_code\": null,\r\n    //         \"locale_code\": null,\r\n    //         \"status\": {\r\n    //             \"status_code\": \"INITIATED\"\r\n    //         }\r\n    //     }\r\n    // ]\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_create-Validation error-Header is required",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.requestJsonMessage.header' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be nul\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    // \"header\": {\r\n    //     \"message_id\": \"123\",\r\n    //     \"message_ts\": \"1708428280\",\r\n    //     \"message_type\": \"program\",\r\n    //     \"action\": \"create\",\r\n    //     \"sender_id\": \"{{receiverId}}\",\r\n    //     \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n    //     \"receiver_id\": \"{{senderId}}\"\r\n    // },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": null,\r\n        \"name\": \"Community Development Initiative\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"Empowering local communities through sustainable development projects.\",\r\n        \"start_date\": 1672531200,\r\n        \"end_date\": 1704067200,\r\n        \"children\":null,\r\n        \"status\": {\r\n            \"status_code\": \"ACTIVE\",\r\n            \"status_message\": \"ACTIVE\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_create-Validation error-startdate greater then enddate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is 200\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===200||pm.response.code===400).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'startDate should be less than endDate' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"startDate should be less than endDate\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": null,\r\n        \"name\": \"Namuna\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"Empowering local communities through sustainable development projects.\",\r\n        \"start_date\": 1872531200,\r\n        \"end_date\": 1704067200,\r\n        \"children\":null,\r\n        \"status\": {\r\n            \"status_code\": \"ACTIVE\",\r\n            \"status_message\": \"ACTIVE\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_create-Validation error-locationCode is required",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'locationCode must not be null' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be nul\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        // \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": null,\r\n        \"name\": \"Community Development Initiative\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"Empowering local communities through sustainable development projects.\",\r\n        \"start_date\": 1672531200,\r\n        \"end_date\": 1704067200,\r\n        \"children\":null,\r\n        \"status\": {\r\n            \"status_code\": \"ACTIVE\",\r\n            \"status_message\": \"ACTIVE\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_create-Validation error-Name is required",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'name must not be null' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be nul\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": null,\r\n        // \"name\": \"Community Development Initiative\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"Empowering local communities through sustainable development projects.\",\r\n        \"start_date\": 1672531200,\r\n        \"end_date\": 1704067200,\r\n        \"children\":null,\r\n        \"status\": {\r\n            \"status_code\": \"ACTIVE\",\r\n            \"status_message\": \"ACTIVE\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_create-Validation error-StartDate is required",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'startDate should not be empty' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be nul\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": null,\r\n        \"name\": \"Community Development Initiative\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"Empowering local communities through sustainable development projects.\",\r\n        // \"start_date\": 1672531200,\r\n        \"end_date\": 1704067200,\r\n        \"children\":null,\r\n        \"status\": {\r\n            \"status_code\": \"ACTIVE\",\r\n            \"status_message\": \"ACTIVE\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_create-Validation error-SenderId and RecieverId Same",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'ReceiverId should not be same as SenderId' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be nul\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": null,\r\n        \"name\": \"Community Development Initiative\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"Empowering local communities through sustainable development projects.\",\r\n        \"start_date\": 1672531200,\r\n        \"end_date\": 1704067200,\r\n        \"children\":null,\r\n        \"status\": {\r\n            \"status_code\": \"ACTIVE\",\r\n            \"status_message\": \"ACTIVE\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_create-Validation error-SenderId null",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.programRequest.header.senderId' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": null,\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": null,\r\n        \"name\": \"Community Development Initiative\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"Empowering local communities through sustainable development projects.\",\r\n        \"start_date\": 1672531200,\r\n        \"end_date\": 1704067200,\r\n        \"children\":null,\r\n        \"status\": {\r\n            \"status_code\": \"ACTIVE\",\r\n            \"status_message\": \"ACTIVE\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_create-Validation error-RecieverId null",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.programRequest.header.receiverId' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": null\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": null,\r\n        \"name\": \"Community Development Initiative\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"Empowering local communities through sustainable development projects.\",\r\n        \"start_date\": 1672531200,\r\n        \"end_date\": 1704067200,\r\n        \"children\":null,\r\n        \"status\": {\r\n            \"status_code\": \"ACTIVE\",\r\n            \"status_message\": \"ACTIVE\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_search-name successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify name Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"    var pgCode = responseBody.programs[0].program_code;\r",
							"    var pgId = responseBody.programs[0].id;\r",
							"    var type = responseBody.programs[0].type;\r",
							"    var parentId = responseBody.programs[0].parent_id;\r",
							"    var description = responseBody.programs[0].description;\r",
							"    var startDate = responseBody.programs[0].start_date;\r",
							"    var endDate = responseBody.programs[0].end_date;\r",
							"    var funCode=  responseBody.programs[0].function_code;\r",
							"    var adminCode= responseBody.programs[0].administration_code;\r",
							"    var recSegCode = responseBody.programs[0].recipient_segment_code;\r",
							"    var ecoSegCode = responseBody.programs[0].economic_segment_code;\r",
							"    var sourceFundCode = responseBody.programs[0].source_of_fund_code;\r",
							"    var targetCode = responseBody.programs[0].target_segment_code;\r",
							"    var currency = responseBody.programs[0].currency_code;\r",
							"    var loCode = responseBody.programs[0].locale_code;\r",
							"    pm.collectionVariables.set(\"pgCode\", pgCode);\r",
							"    pm.collectionVariables.set(\"pgId\", pgId);\r",
							"    pm.collectionVariables.set(\"type\", type);\r",
							"    pm.collectionVariables.set(\"parentId\", parentId);\r",
							"    pm.collectionVariables.set(\"description\", description);\r",
							"    pm.collectionVariables.set(\"startDate\", startDate);\r",
							"    pm.collectionVariables.set(\"endDate\", endDate);\r",
							"    pm.collectionVariables.set(\"funCode\", funCode);\r",
							"    pm.collectionVariables.set(\"adminCode\", adminCode);\r",
							"    pm.collectionVariables.set(\"recSegCode\", recSegCode);\r",
							"    pm.collectionVariables.set(\"ecoSegCode\", ecoSegCode);\r",
							"    pm.collectionVariables.set(\"sourceFundCode\", sourceFundCode);\r",
							"    pm.collectionVariables.set(\"targetCode\", targetCode);\r",
							"    pm.collectionVariables.set(\"currency\", currency);\r",
							"    pm.collectionVariables.set(\"loCode\", loCode);\r",
							"        \r",
							"\r",
							"\r",
							"    // Extract the value of the attribute from the response body\r",
							"    var name = responseBody.programs[0].name; // Replace \"attributeName\" with the actual attribute name\r",
							"\r",
							"    // Get the value of the same attribute from the collection variables\r",
							"    var name = pm.collectionVariables.get(\"name\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(name).to.eql(name);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"program\",\n        \"action\": \"search\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{senderId}}\"\n    },\n    \"message\": {\n        \"name\": \"{{name}}\",\n        \"location_code\": \"{{tenantId}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_search",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_search-Ids successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Extract Programs Object\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the 'programs' object\r",
							"    var id1 = responseBody.programs[0].id;\r",
							"    var id2 = pm.collectionVariables.get(\"pgId\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(id1).to.eql(id2);\r",
							"\r",
							"    // Set the 'programs' object as a Postman variable\r",
							"  \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"program\",\n        \"action\": \"search\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{senderId}}\"\n    },\n    \"message\": {\n        \"ids\": [\n            \"{{pgId}}\"\n        ],\n        \"location_code\": \"{{tenantId}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_search",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_search-ProgramCode successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify program_code Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the value of the attribute from the response body\r",
							"    var programCode = responseBody.programs[0].program_code; // Replace \"attributeName\" with the actual attribute name\r",
							"\r",
							"    // Get the value of the same attribute from the collection variables\r",
							"    var pgCode = pm.collectionVariables.get(\"pgCode\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(programCode).to.eql(pgCode);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"program\",\n        \"action\": \"search\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{senderId}}\"\n    },\n    \"message\": {\n        \"program_code\": \"{{pgCode}}\",\n        \"location_code\": \"{{tenantId}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_search",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_search-LocationCode successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify locationCode Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the value of the attribute from the response body\r",
							"    var locationCode = responseBody.programs[0].location_code; // Replace \"attributeName\" with the actual attribute name\r",
							"\r",
							"    // Get the value of the same attribute from the collection variables\r",
							"    var tenantId = pm.environment.get(\"tenantId\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(locationCode).to.eql(tenantId);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"program\",\n        \"action\": \"search\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{senderId}}\"\n    },\n    \"message\": {\n        // \"ids\":[\"251c51eb-e970-4e01-a99a-70136c47a934\", \"string\"]\n        // \"program_code\": \"PG/2023-24/000090\"\n        // // \n        // \"name\":\"Mukta\"\n        // \"muktaReferenceId\":\"EP/1013/2023-24/02/22/000085\",\n        \"location_code\": \"{{tenantId}}\"\n        // \"pagination\" : {\n        //     // \"sort_by\": \"id\",\n        //     \"sort_order\" : \"ASC\"\n        // }\n    }\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_search",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_search-sortOrder_Asc successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"program\",\n        \"action\": \"search\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{senderId}}\"\n    },\n    \"message\": {\n        // \"ids\":[\"251c51eb-e970-4e01-a99a-70136c47a934\", \"string\"]\n        // \"program_code\": \"PG/2023-24/000090\"\n        // // \n        // \"name\":\"Mukta\"\n        \"payment_number\":\"EP/1013/2023-24/03/05/000102\",\n        \"location_code\":\"{{tenantId}}\",\n        \"pagination\" : {\n            // \"sort_by\": \"id\",\n            \"sort_order\" : \"ASC\"\n        }\n    }\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_search",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_search-SortOrder_desc successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"program\",\n        \"action\": \"search\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{senderId}}\"\n    },\n    \"message\": {\n        \"location_code\": \"{{tenantId}}\",\n        \"pagination\": {\n            // \"sort_by\": \"id\",\n            \"sort_order\": \"DESC\"\n        }\n    }\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_search",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_search-SortBy_ID successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"program\",\n        \"action\": \"search\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{senderId}}\"\n    },\n    \"message\": {\n        \"location_code\": \"{{tenantId}}\",\n        \"pagination\": {\n            \"sort_by\": \"id\"\n        }\n    }\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_search",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_update-Initiated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify status Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"    var Status = responseBody.message.status.status_code;\r",
							"    pm.expect(Status).to.be.equal(\"INITIATED\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\":\"program\",\n        \"action\": \"update\",\n        \"sender_id\": \"{{senderId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{receiverId}}\"\n    },\n    \"message\": {\n        \"id\":\"{{pgId}}\",\n        \"type\":\"{{type}}\",\n        \"location_code\": \"{{tenantId}}\",\n        \"program_code\": \"{{pgCode}}\",\n        \"name\": \"{{name}}\",\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\n        \"description\": \"{{description}}\",\n        \"start_date\": {{startDate}},\n        \"end_date\": {{endDate}},\n        \"children\": null,\n        \"status\": {\n            \"status_code\": \"INITIATED\",\n            \"status_message\": \"INITIATED\"\n        },\n        \"additional_details\": {},\n        \"function_code\": \"{{funCode}}\",\n        \"administration_code\": \"{{adminCode}}\",\n        \"recipient_segment_code\": \"{{recSegCode}}\",\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\n        \"target_segment_code\": \"{{targetCode}}\",\n        \"currency_code\": \"{{currency}}\",\n        \"locale_code\": \"{{loCode}}\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_update",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_update-INPROCESS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify status Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"    var Status = responseBody.message.status.status_code;\r",
							"    pm.expect(Status).to.be.equal(\"INPROCESS\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\":\"program\",\n        \"action\": \"update\",\n        \"sender_id\": \"{{senderId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{receiverId}}\"\n    },\n    \"message\": {\n        \"id\":\"{{pgId}}\",\n        \"location_code\": \"{{tenantId}}\",\n        \"program_code\": \"{{pgCode}}\",\n        \"name\": \"{{name}}\",\n        \"type\":\"{{type}}\",\n        // \"parent_id\": \"{{parentId}}\",\n        \"description\": \"{{description}}\",\n        \"start_date\": {{startDate}},\n        \"end_date\": {{endDate}},\n        \"children\": null,\n        \"status\": {\n            \"status_code\": \"INPROCESS\",\n            \"status_message\": \"INPROCESS\"\n        },\n        \"additional_details\": {},\n        \"function_code\": \"{{funCode}}\",\n        \"administration_code\": \"{{adminCode}}\",\n        \"recipient_segment_code\": \"{{recSegCode}}\",\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\n        \"target_segment_code\": \"{{targetCode}}\",\n        \"currency_code\": \"{{currency}}\",\n        \"locale_code\": \"{{loCode}}\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_update",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_update-APPROVED",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify status Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"    var Status = responseBody.message.status.status_code;\r",
							"    pm.expect(Status).to.be.equal(\"APPROVED\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\":\"program\",\n        \"action\": \"update\",\n        \"sender_id\": \"{{senderId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{receiverId}}\"\n    },\n    \"message\": {\n        \"id\":\"{{pgId}}\",\n        \"type\":\"{{type}}\",\n        \"location_code\": \"{{tenantId}}\",\n        \"program_code\": \"{{pgCode}}\",\n        \"name\": \"{{name}}\",\n        // \"parent_id\": \"{{parentId}}\",\n        \"description\": \"{{description}}\",\n        \"start_date\": {{startDate}},\n        \"end_date\": {{endDate}},\n        \"children\": null,\n        \"status\": {\n            \"status_code\": \"APPROVED\",\n            \"status_message\": \"APPROVED\"\n        },\n        \"additional_details\": {},\n        \"function_code\": \"{{funCode}}\",\n        \"administration_code\": \"{{adminCode}}\",\n        \"recipient_segment_code\": \"{{recSegCode}}\",\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\n        \"target_segment_code\": \"{{targetCode}}\",\n        \"currency_code\": \"{{currency}}\",\n        \"locale_code\": \"{{loCode}}\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_update",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_update-validation error-endDate smaller then StartDate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is 200 ok\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===200||pm.response.code===400).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'startDate should be less than endDate' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"startDate should be less than endDate\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\":\"program\",\n        \"action\": \"update\",\n        \"sender_id\": \"{{senderId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{receiverId}}\"\n    },\n    \"message\": {\n        \"id\":\"{{pgId}}\",\n        \"location_code\": \"{{tenantId}}\",\n        \"program_code\": \"{{pgCode}}\",\n        \"name\": \"{{name}}\",\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\n        \"description\": \"{{description}}\",\n        \"start_date\": 1810852664,\n        \"end_date\": 1704067200,\n        \"children\": null,\n        \"status\": {\n            \"status_code\": \"INITIATED\",\n            \"status_message\": \"INITIATED\"\n        },\n        \"additional_details\": {},\n        \"function_code\": \"FC001\",\n        \"administration_code\": \"AC002\",\n        \"recipient_segment_code\": \"RSC003\",\n        \"economic_segment_code\": \"ESC004\",\n        \"source_of_fund_code\": \"SFC005\",\n        \"target_segment_code\": \"TSC006\",\n        \"currency_code\": \"INR\",\n        \"locale_code\": \"LC007\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_update",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_update-validation error-senderId and recieverId same",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'RECEIVER_ID_SENDER_ID_ERROR' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"ReceiverId should not be same as SenderId\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\":\"program\",\n        \"action\": \"update\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{receiverId}}\"\n    },\n    \"message\": {\n        \"id\":\"{{pgId}}\",\n        \"location_code\": \"{{tenantId}}\",\n        \"program_code\": \"{{pgCode}}\",\n        \"name\": \"{{name}}\",\n        \"type\":\"{{type}}\",\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\n        \"description\": \"{{description}}\",\n        \"start_date\": {{startDate}},\n        \"end_date\": {{endDate}},\n        \"children\": null,\n        \"status\": {\n            \"status_code\": \"INITIATED\",\n            \"status_message\": \"INITIATED\"\n        },\n        \"additional_details\": {},\n        \"function_code\": \"FC001\",\n        \"administration_code\": \"AC002\",\n        \"recipient_segment_code\": \"RSC003\",\n        \"economic_segment_code\": \"ESC004\",\n        \"source_of_fund_code\": \"SFC005\",\n        \"target_segment_code\": \"TSC006\",\n        \"currency_code\": \"INR\",\n        \"locale_code\": \"LC007\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_update",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_update-validation error-Header missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.programRequest.header' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    // \"header\": {\n    //     \"message_id\": \"123\",\n    //     \"message_ts\": \"1708428280\",\n    //     \"message_type\":\"program\",\n    //     \"action\": \"update\",\n    //     \"sender_id\": \"{{senderId}}\",\n    //     \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n    //     \"receiver_id\": \"{{receiverId}}\"\n    // },\n    \"message\": {\n        \"id\":\"{{pgId}}\",\n        \"location_code\": \"{{tenantId}}\",\n        \"program_code\": \"{{pgCode}}\",\n        \"name\": \"Community Development Initiative\",\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\n        \"description\": \"Empowering local communities through sustainable development projects.\",\n        \"start_date\": 1672531200,\n        \"end_date\": 1704067200,\n        \"children\": null,\n        \"status\": {\n            \"status_code\": \"INITIATED\",\n            \"status_message\": \"INITIATED\"\n        },\n        \"additional_details\": {},\n        \"function_code\": \"FC001\",\n        \"administration_code\": \"AC002\",\n        \"recipient_segment_code\": \"RSC003\",\n        \"economic_segment_code\": \"ESC004\",\n        \"source_of_fund_code\": \"SFC005\",\n        \"target_segment_code\": \"TSC006\",\n        \"currency_code\": \"INR\",\n        \"locale_code\": \"LC007\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_update",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_update-validation error-Message missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.programRequest.program' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\":\"program\",\n        \"action\": \"update\",\n        \"sender_id\": \"{{senderId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{receiverId}}\"\n    }\n    // \"message\": {\n    //     \"id\":\"{{Id}}\",\n    //     \"location_code\": \"{{tenantId}}\",\n    //     \"program_code\": \"PG/2023-24/000358\",\n    //     \"name\": \"Community Development Initiative\",\n    //     // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\n    //     \"description\": \"Empowering local communities through sustainable development projects.\",\n    //     \"start_date\": 1672531200,\n    //     \"end_date\": 1704067200,\n    //     \"children\": null,\n    //     \"status\": {\n    //         \"status_code\": \"INITIATED\",\n    //         \"status_message\": \"INITIATED\"\n    //     },\n    //     \"additional_details\": {},\n    //     \"function_code\": \"FC001\",\n    //     \"administration_code\": \"AC002\",\n    //     \"recipient_segment_code\": \"RSC003\",\n    //     \"economic_segment_code\": \"ESC004\",\n    //     \"source_of_fund_code\": \"SFC005\",\n    //     \"target_segment_code\": \"TSC006\",\n    //     \"currency_code\": \"INR\",\n    //     \"locale_code\": \"LC007\"\n    // }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_update",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_update-validation error-LocationCode missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.programRequest.locationCode' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\":\"program\",\n        \"action\": \"update\",\n        \"sender_id\": \"{{senderId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{receiverId}}\"\n    },\n    \"message\": {\n        \"id\":\"{{pgId}}\",\n        // \"location_code\": \"{{tenantId}}\",\n        \"program_code\": \"{{pgCode}}\",\n        \"name\": \"{{name}}\",\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\n        \"description\": \"{{description}}\",\n        \"start_date\": {{startDate}},\n        \"end_date\": {{endDate}},\n        \"children\": null,\n        \"status\": {\n            \"status_code\": \"INITIATED\",\n            \"status_message\": \"INITIATED\"\n        },\n        \"additional_details\": {},\n        \"function_code\": \"FC001\",\n        \"administration_code\": \"AC002\",\n        \"recipient_segment_code\": \"RSC003\",\n        \"economic_segment_code\": \"ESC004\",\n        \"source_of_fund_code\": \"SFC005\",\n        \"target_segment_code\": \"TSC006\",\n        \"currency_code\": \"INR\",\n        \"locale_code\": \"LC007\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_update",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_update-validation error-StartDate missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'Min.programRequest.program.startDate' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"Value must be greater than 0\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\":\"program\",\n        \"action\": \"update\",\n        \"sender_id\": \"{{senderId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{receiverId}}\"\n    },\n    \"message\": {\n        \"id\":\"{{Id}}\",\n        \"location_code\": \"{{tenantId}}\",\n        \"program_code\": \"PG/2023-24/000358\",\n        \"name\": \"Community Development Initiative\",\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\n        \"description\": \"Empowering local communities through sustainable development projects.\",\n        // \"start_date\": 1672531200,\n        \"end_date\": 1704067200,\n        \"children\": null,\n        \"status\": {\n            \"status_code\": \"INITIATED\",\n            \"status_message\": \"INITIATED\"\n        },\n        \"additional_details\": {},\n        \"function_code\": \"FC001\",\n        \"administration_code\": \"AC002\",\n        \"recipient_segment_code\": \"RSC003\",\n        \"economic_segment_code\": \"ESC004\",\n        \"source_of_fund_code\": \"SFC005\",\n        \"target_segment_code\": \"TSC006\",\n        \"currency_code\": \"INR\",\n        \"locale_code\": \"LC007\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_update",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_update-validation error-Id missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===200||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'PROGRAM_ID_ERROR' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"programId should not be empty for update\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\":\"program\",\n        \"action\": \"update\",\n        \"sender_id\": \"{{senderId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{receiverId}}\"\n    },\n    \"message\": {\n        // \"id\":\"{{pgId}}\",\n        \"location_code\": \"{{tenantId}}\",\n        \"program_code\": \"{{pgCode}}\",\n        \"name\": \"Community Development Initiative\",\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\n        \"description\": \"Empowering local communities through sustainable development projects.\",\n        \"start_date\": 1672531200,\n        \"end_date\": 1704067200,\n        \"children\": null,\n        \"status\": {\n            \"status_code\": \"INITIATED\",\n            \"status_message\": \"INITIATED\"\n        },\n        \"additional_details\": {},\n        \"function_code\": \"FC001\",\n        \"administration_code\": \"AC002\",\n        \"recipient_segment_code\": \"RSC003\",\n        \"economic_segment_code\": \"ESC004\",\n        \"source_of_fund_code\": \"SFC005\",\n        \"target_segment_code\": \"TSC006\",\n        \"currency_code\": \"INR\",\n        \"locale_code\": \"LC007\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_update",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "program_update-validation error-Program code missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===200||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'PROGRAM_CODE_ERROR' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"programId should not be empty for update\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\":\"program\",\n        \"action\": \"update\",\n        \"sender_id\": \"{{senderId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{receiverId}}\"\n    },\n    \"message\": {\n        \"id\":\"{{pgId}}\",\n        \"location_code\": \"{{tenantId}}\",\n        // \"program_code\": \"{{pgCode}}\",\n        \"name\": \"Community Development Initiative\",\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\n        \"description\": \"Empowering local communities through sustainable development projects.\",\n        \"start_date\": 1672531200,\n        \"end_date\": 1704067200,\n        \"children\": null,\n        \"status\": {\n            \"status_code\": \"INITIATED\",\n            \"status_message\": \"INITIATED\"\n        },\n        \"additional_details\": {},\n        \"function_code\": \"FC001\",\n        \"administration_code\": \"AC002\",\n        \"recipient_segment_code\": \"RSC003\",\n        \"economic_segment_code\": \"ESC004\",\n        \"source_of_fund_code\": \"SFC005\",\n        \"target_segment_code\": \"TSC006\",\n        \"currency_code\": \"INR\",\n        \"locale_code\": \"LC007\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/program/_update",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "On Sanction-Create-validation error-recieverid and senderId same",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'RECEIVER_ID_SENDER_ID_ERROR' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"ReceiverId should not be same as SenderId\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-sanction\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"3c069124-183d-4d39-ba08-53799c9abc35\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"PG/2023-24/000358\",\r\n                \"net_amount\": 1000,\r\n                \"gross_amount\": 1000,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"FC001\",\r\n                \"administration_code\": \"AC002\",\r\n                \"recipient_segment_code\": \"RSC003\",\r\n                \"economic_segment_code\": \"ESC004\",\r\n                \"source_of_fund_code\": \"SFC005\",\r\n                \"target_segment_code\": \"TSC006\",\r\n                \"currency_code\": \"INR\",\r\n                \"locale_code\": \"LC007\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-sanction/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-sanction",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On Sanction-Create-validation error-header missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.sanctionRequest.header' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    // \"header\": {\r\n    //     \"message_id\": \"123\",\r\n    //     \"message_ts\": \"1708428280\",\r\n    //     \"message_type\": \"on-sanction\",\r\n    //     \"action\": \"create\",\r\n    //     \"sender_id\": \"{{senderId}}\",\r\n    //     \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n    //     \"receiver_id\": \"{{senderId}}\"\r\n    // },\r\n    \"message\": {\r\n        \"id\":\"3c069124-183d-4d39-ba08-53799c9abc35\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"PG/2023-24/000358\",\r\n                \"net_amount\": 1000,\r\n                \"gross_amount\": 1000,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"FC001\",\r\n                \"administration_code\": \"AC002\",\r\n                \"recipient_segment_code\": \"RSC003\",\r\n                \"economic_segment_code\": \"ESC004\",\r\n                \"source_of_fund_code\": \"SFC005\",\r\n                \"target_segment_code\": \"TSC006\",\r\n                \"currency_code\": \"INR\",\r\n                \"locale_code\": \"LC007\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/on-sanction/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-sanction",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On Sanction-Create-validation error-ProgramCode missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.sanctionRequest.sanctions[0].programCode' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-sanction\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"3c069124-183d-4d39-ba08-53799c9abc35\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        // \"program_code\": \"PG/2023-24/000358\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                // \"program_code\": \"PG/2023-24/000358\",\r\n                \"net_amount\": 1000,\r\n                \"gross_amount\": 1000,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"FC001\",\r\n                \"administration_code\": \"AC002\",\r\n                \"recipient_segment_code\": \"RSC003\",\r\n                \"economic_segment_code\": \"ESC004\",\r\n                \"source_of_fund_code\": \"SFC005\",\r\n                \"target_segment_code\": \"TSC006\",\r\n                \"currency_code\": \"INR\",\r\n                \"locale_code\": \"LC007\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-sanction/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-sanction",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On Sanction-Create-validation error-message missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.sanctionRequest.sanctions' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-sanction\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    }\r\n    // \"message\": {\r\n    //     \"id\":\"3c069124-183d-4d39-ba08-53799c9abc35\",\r\n    //     \"location_code\": \"{{tenantId}}\",\r\n    //     \"program_code\": \"PG/2023-24/000358\",\r\n    //     \"net_amount\": 1000,\r\n    //     \"gross_amount\": 1000,\r\n    //     \"children\": [\r\n    //         {\r\n    //             \"location_code\": \"{{tenantId}}\",\r\n    //             \"program_code\": \"PG/2023-24/000358\",\r\n    //             \"net_amount\": 1000,\r\n    //             \"gross_amount\": 1000,\r\n    //             \"status\": {\r\n    //                 \"status_code\": \"INITIATED\",\r\n    //                 \"status_message\": \"INITIATED\"\r\n    //             },\r\n    //             \"additional_details\": {},\r\n    //             \"function_code\": \"FC001\",\r\n    //             \"administration_code\": \"AC002\",\r\n    //             \"recipient_segment_code\": \"RSC003\",\r\n    //             \"economic_segment_code\": \"ESC004\",\r\n    //             \"source_of_fund_code\": \"SFC005\",\r\n    //             \"target_segment_code\": \"TSC006\",\r\n    //             \"currency_code\": \"INR\",\r\n    //             \"locale_code\": \"LC007\"\r\n    //         }\r\n    //     ],\r\n    //     \"status\": {\r\n    //         \"status_code\": \"INITIATED\",\r\n    //         \"status_message\": \"INITIATED\"\r\n    //     },\r\n    //     \"additional_details\": {},\r\n    //     \"function_code\": \"FC001\",\r\n    //     \"administration_code\": \"AC002\",\r\n    //     \"recipient_segment_code\": \"RSC003\",\r\n    //     \"economic_segment_code\": \"ESC004\",\r\n    //     \"source_of_fund_code\": \"SFC005\",\r\n    //     \"target_segment_code\": \"TSC006\",\r\n    //     \"currency_code\": \"INR\",\r\n    //     \"locale_code\": \"LC007\"\r\n    // }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-sanction/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-sanction",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On Sanction-Create-validation error-locationCode missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.sanctionRequest.locationCode' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-sanction\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"3c069124-183d-4d39-ba08-53799c9abc35\",\r\n        // \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"children\": [\r\n            {\r\n                // \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"PG/2023-24/000358\",\r\n                \"net_amount\": 1000,\r\n                \"gross_amount\": 1000,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"FC001\",\r\n                \"administration_code\": \"AC002\",\r\n                \"recipient_segment_code\": \"RSC003\",\r\n                \"economic_segment_code\": \"ESC004\",\r\n                \"source_of_fund_code\": \"SFC005\",\r\n                \"target_segment_code\": \"TSC006\",\r\n                \"currency_code\": \"INR\",\r\n                \"locale_code\": \"LC007\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-sanction/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-sanction",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On Sanction-Create-validation error-Status missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NullPointerException' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-sanction\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"PG/2023-24/000358\",\r\n                \"net_amount\": 1000,\r\n                \"gross_amount\": 1000,\r\n                // \"status\": {\r\n                //     \"status_code\": \"INITIATED\",\r\n                //     \"status_message\": \"INITIATED\"\r\n                // },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"FC001\",\r\n                \"administration_code\": \"AC002\",\r\n                \"recipient_segment_code\": \"RSC003\",\r\n                \"economic_segment_code\": \"ESC004\",\r\n                \"source_of_fund_code\": \"SFC005\",\r\n                \"target_segment_code\": \"TSC006\",\r\n                \"currency_code\": \"INR\",\r\n                \"locale_code\": \"LC007\"\r\n            }\r\n        ],\r\n        // \"status\": {\r\n        //     \"status_code\": \"INITIATED\",\r\n        //     \"status_message\": \"INITIATED\"\r\n        // },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-sanction/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-sanction",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On Sanction-Create-validation error-netAmount missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.sanctionRequest.sanction.netAmount' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-sanction\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        // \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                // \"net_amount\": 1000,\r\n                \"gross_amount\": 1000,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"FC001\",\r\n                \"administration_code\": \"AC002\",\r\n                \"recipient_segment_code\": \"RSC003\",\r\n                \"economic_segment_code\": \"ESC004\",\r\n                \"source_of_fund_code\": \"SFC005\",\r\n                \"target_segment_code\": \"TSC006\",\r\n                \"currency_code\": \"INR\",\r\n                \"locale_code\": \"LC007\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-sanction/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-sanction",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On Sanction-Create-validation error-grossAmount missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.sanctionRequest.sanction.grossAmount' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-sanction\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"net_amount\": 1000,\r\n        // \"gross_amount\": 1000,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"net_amount\": 1000,\r\n                // \"gross_amount\": 1000,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"FC001\",\r\n                \"administration_code\": \"AC002\",\r\n                \"recipient_segment_code\": \"RSC003\",\r\n                \"economic_segment_code\": \"ESC004\",\r\n                \"source_of_fund_code\": \"SFC005\",\r\n                \"target_segment_code\": \"TSC006\",\r\n                \"currency_code\": \"INR\",\r\n                \"locale_code\": \"LC007\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-sanction/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-sanction",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "ON-Sanction_create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Capture and Parse Response Body\", function () {\r",
							"    \r",
							"    var responseBody = pm.response.json();\r",
							"    var sanctionId = responseBody.message.children[0].id;\r",
							"    pm.collectionVariables.set(\"sanctionId\", sanctionId);\r",
							"    var netAmount = responseBody.message.net_amount;\r",
							"    var grossAmount = responseBody.message.gross_amount;\r",
							"    pm.collectionVariables.set(\"netAmount\", netAmount);\r",
							"    pm.collectionVariables.set(\"grossAmount\", grossAmount);\r",
							"    // var createdBy = responseBody.message[0].audit_details.createdBy;\r",
							"    // pm.collectionVariables.set(\"createdBy\", createdBy);\r",
							"    // var lastModifiedBy = responseBody.message[0].audit_details.lastModifiedBy;\r",
							"    // pm.collectionVariables.set(\"lastModifiedBy\", lastModifiedBy);\r",
							"    // var createdTime = responseBody.message[0].audit_details.createdTime;\r",
							"    // pm.collectionVariables.set(\"createdTime\", createdTime);\r",
							"    // var lastModifiedTime = responseBody.message[0].audit_details.lastModifiedTime;\r",
							"    // pm.collectionVariables.set(\"lastModifiedTime\", lastModifiedTime);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-sanction\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        // \"id\":\"da7086aa-3763-42a6-ab72-87756d9f4d04\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"net_amount\": 250000,\r\n        \"gross_amount\": 250000,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"net_amount\": 250000,\r\n                \"gross_amount\": 250000,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-sanction/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-sanction",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-sanction/_update-iNITIATED",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify response Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify status code is updated to INITIATED\", function () {\r",
							"    \r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.message.status.status_code).to.be.equal(\"INITIATED\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"on-sanction\",\n        \"action\": \"update\",\n        \"sender_id\": \"{{senderId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{receiverId}}\"\n    },\n    \"message\": {\n        \"id\": \"{{sanctionId}}\",\n        \"location_code\": \"{{tenantId}}\",\n        \"program_code\": \"{{{pgCode}}}\",\n        \"net_amount\": {{netAmount}},\n        \"gross_amount\": {{grossAmount}},\n        \"children\": [\n            {\n                \"id\": \"{{sanctionId}}\",\n                \"location_code\": \"{{tenantId}}\",\n                \"program_code\": \"{{pgCode}}\",\n                \"net_amount\": {{netAmount}},\n                \"gross_amount\": {{grossAmount}},\n                \"status\": {\n                    \"status_code\": \"INITIATED\",\n                    \"status_message\": \"INITIATED\"\n                },\n                \"additional_details\": {},\n                \"function_code\": \"{{funCode}}\",\n                \"administration_code\": \"{{adminCode}}\",\n                \"recipient_segment_code\": \"{{recSegCode}}\",\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\n                \"target_segment_code\": \"{{targetCode}}\",\n                \"currency_code\": \"{{currency}}\",\n                \"locale_code\": \"{{loCode}}\"\n            }\n        ],\n        \"status\": {\n            \"status_code\": \"INITIATED\",\n            \"status_message\": \"INITIATED\"\n        },\n        \"additional_details\": {},\n        \"function_code\": \"{{funCode}}\",\n        \"administration_code\": \"{{adminCode}}\",\n        \"recipient_segment_code\": \"{{recSegCode}}\",\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\n        \"target_segment_code\": \"{{targetCode}}\",\n        \"currency_code\": \"{{currency}}\",\n        \"locale_code\": \"{{loCode}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-sanction/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-sanction",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-sanction/_update-IN PROCESS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify response Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify status code is updated to INPROCESS\", function () {\r",
							"    \r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.message.status.status_code).to.be.equal(\"INPROCESS\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"on-sanction\",\n        \"action\": \"update\",\n        \"sender_id\": \"{{senderId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{receiverId}}\"\n    },\n    \"message\": {\n        \"id\": \"{{sanctionId}}\",\n        \"location_code\": \"{{tenantId}}\",\n        \"program_code\": \"{{{pgCode}}}\",\n        \"net_amount\": {{netAmount}},\n        \"gross_amount\": {{grossAmount}},\n        \"children\": [\n            {\n                \"id\": \"{{sanctionId}}\",\n                \"location_code\": \"{{tenantId}}\",\n                \"program_code\": \"{{pgCode}}\",\n                \"net_amount\": {{netAmount}},\n                \"gross_amount\": {{grossAmount}},\n                \"status\": {\n                    \"status_code\": \"INPROCESS\",\n                    \"status_message\": \"INPROCESS\"\n                },\n                \"additional_details\": {},\n                \"function_code\": \"{{funCode}}\",\n                \"administration_code\": \"{{adminCode}}\",\n                \"recipient_segment_code\": \"{{recSegCode}}\",\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\n                \"target_segment_code\": \"{{targetCode}}\",\n                \"currency_code\": \"{{currency}}\",\n                \"locale_code\": \"{{loCode}}\"\n            }\n        ],\n        \"status\": {\n            \"status_code\": \"INPROCESS\",\n            \"status_message\": \"INPROCESS\"\n        },\n        \"additional_details\": {},\n        \"function_code\": \"{{funCode}}\",\n        \"administration_code\": \"{{adminCode}}\",\n        \"recipient_segment_code\": \"{{recSegCode}}\",\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\n        \"target_segment_code\": \"{{targetCode}}\",\n        \"currency_code\": \"{{currency}}\",\n        \"locale_code\": \"{{loCode}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-sanction/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-sanction",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-sanction/_update-APPROVED",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify response Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify status code is updated to APPROVED\", function () {\r",
							"    \r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.message.status.status_code).to.be.equal(\"APPROVED\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"on-sanction\",\n        \"action\": \"update\",\n        \"sender_id\": \"{{senderId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{receiverId}}\"\n    },\n    \"message\": {\n        \"id\": \"{{sanctionId}}\",\n        \"location_code\": \"{{tenantId}}\",\n        \"program_code\": \"{{{pgCode}}}\",\n        \"net_amount\": {{netAmount}},\n        \"gross_amount\": {{grossAmount}},\n        \"children\": [\n            {\n                \"id\": \"{{sanctionId}}\",\n                \"location_code\": \"{{tenantId}}\",\n                \"program_code\": \"{{pgCode}}\",\n                \"net_amount\": {{netAmount}},\n                \"gross_amount\": {{grossAmount}},\n                \"status\": {\n                    \"status_code\": \"APPROVED\",\n                    \"status_message\": \"APPROVED\"\n                },\n                \"additional_details\": {},\n                \"function_code\": \"{{funCode}}\",\n                \"administration_code\": \"{{adminCode}}\",\n                \"recipient_segment_code\": \"{{recSegCode}}\",\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\n                \"target_segment_code\": \"{{targetCode}}\",\n                \"currency_code\": \"{{currency}}\",\n                \"locale_code\": \"{{loCode}}\"\n            }\n        ],\n        \"status\": {\n            \"status_code\": \"APPROVED\",\n            \"status_message\": \"APPROVED\"\n        },\n        \"additional_details\": {},\n        \"function_code\": \"{{funCode}}\",\n        \"administration_code\": \"{{adminCode}}\",\n        \"recipient_segment_code\": \"{{recSegCode}}\",\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\n        \"target_segment_code\": \"{{targetCode}}\",\n        \"currency_code\": \"{{currency}}\",\n        \"locale_code\": \"{{loCode}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-sanction/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-sanction",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-sanction/_update-SUCCESSFUL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify response Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify status code is updated to SUCCESSFUL\", function () {\r",
							"    \r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.message.status.status_code).to.be.equal(\"SUCCESSFUL\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"on-sanction\",\n        \"action\": \"update\",\n        \"sender_id\": \"{{senderId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{receiverId}}\"\n    },\n    \"message\": {\n        \"id\": \"{{sanctionId}}\",\n        \"location_code\": \"{{tenantId}}\",\n        \"program_code\": \"{{{pgCode}}}\",\n        \"net_amount\": {{netAmount}},\n        \"gross_amount\": {{grossAmount}},\n        \"children\": [\n            {\n                \"id\": \"{{sanctionId}}\",\n                \"location_code\": \"{{tenantId}}\",\n                \"program_code\": \"{{pgCode}}\",\n                \"net_amount\": {{netAmount}},\n                \"gross_amount\": {{grossAmount}},\n                \"status\": {\n                    \"status_code\": \"SUCCESSFUL\",\n                    \"status_message\": \"SUCCESSFUL\"\n                },\n                \"additional_details\": {},\n                \"function_code\": \"{{funCode}}\",\n                \"administration_code\": \"{{adminCode}}\",\n                \"recipient_segment_code\": \"{{recSegCode}}\",\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\n                \"target_segment_code\": \"{{targetCode}}\",\n                \"currency_code\": \"{{currency}}\",\n                \"locale_code\": \"{{loCode}}\"\n            }\n        ],\n        \"status\": {\n            \"status_code\": \"SUCCESSFUL\",\n            \"status_message\": \"SUCCESSFUL\"\n        },\n        \"additional_details\": {},\n        \"function_code\": \"{{funCode}}\",\n        \"administration_code\": \"{{adminCode}}\",\n        \"recipient_segment_code\": \"{{recSegCode}}\",\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\n        \"target_segment_code\": \"{{targetCode}}\",\n        \"currency_code\": \"{{currency}}\",\n        \"locale_code\": \"{{loCode}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-sanction/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-sanction",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-sanction/_update-FAILED",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify response Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify status code is updated to FAILED\", function () {\r",
							"    \r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.message.status.status_code).to.be.equal(\"FAILED\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"on-sanction\",\n        \"action\": \"update\",\n        \"sender_id\": \"{{senderId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{receiverId}}\"\n    },\n    \"message\": {\n        \"id\": \"{{sanctionId}}\",\n        \"location_code\": \"{{tenantId}}\",\n        \"program_code\": \"{{{pgCode}}}\",\n        \"net_amount\": {{netAmount}},\n        \"gross_amount\": {{grossAmount}},\n        \"children\": [\n            {\n                \"id\": \"{{sanctionId}}\",\n                \"location_code\": \"{{tenantId}}\",\n                \"program_code\": \"{{pgCode}}\",\n                \"net_amount\": {{netAmount}},\n                \"gross_amount\": {{grossAmount}},\n                \"status\": {\n                    \"status_code\": \"FAILED\",\n                    \"status_message\": \"FAILED\"\n                },\n                \"additional_details\": {},\n                \"function_code\": \"{{funCode}}\",\n                \"administration_code\": \"{{adminCode}}\",\n                \"recipient_segment_code\": \"{{recSegCode}}\",\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\n                \"target_segment_code\": \"{{targetCode}}\",\n                \"currency_code\": \"{{currency}}\",\n                \"locale_code\": \"{{loCode}}\"\n            }\n        ],\n        \"status\": {\n            \"status_code\": \"FAILED\",\n            \"status_message\": \"FAILED\"\n        },\n        \"additional_details\": {},\n        \"function_code\": \"{{funCode}}\",\n        \"administration_code\": \"{{adminCode}}\",\n        \"recipient_segment_code\": \"{{recSegCode}}\",\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\n        \"target_segment_code\": \"{{targetCode}}\",\n        \"currency_code\": \"{{currency}}\",\n        \"locale_code\": \"{{loCode}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-sanction/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-sanction",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "sanction/_search-Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify sanctionId Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the value of the attribute from the response body\r",
							"    var sanctionId = responseBody.sanctions[0].id; // Replace \"attributeName\" with the actual attribute name\r",
							"\r",
							"    // Get the value of the same attribute from the collection variables\r",
							"    var sanctionId = pm.environment.get(\"sanctionId\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(sanctionId).to.eql(sanctionId);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"sanction\",\n        \"action\": \"SEARCH\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{senderId}}\"\n    },\n    \"message\": {\n        \"ids\": [\n            \"{{sanctionId}}\"\n        ],\n        \"location_code\": \"{{tenantId}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/sanction/_search",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"sanction",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "sanction/_search-program code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify program_code Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the value of the attribute from the response body\r",
							"    var programCode = responseBody.sanctions[0].program_code; // Replace \"attributeName\" with the actual attribute name\r",
							"\r",
							"    // Get the value of the same attribute from the collection variables\r",
							"    var pgCode = pm.collectionVariables.get(\"pgCode\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(programCode).to.eql(pgCode);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"sanction\",\n        \"action\": \"SEARCH\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{senderId}}\"\n    },\n    \"message\": {\n        \n        \"program_code\": \"{{pgCode}}\",\n        \"location_code\": \"{{tenantId}}\"\n        \n    }\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/sanction/_search",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"sanction",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "sanction/_search-location code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify location_code Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the value of the attribute from the response body\r",
							"    var locationCode = responseBody.sanctions[0].location_code; // Replace \"attributeName\" with the actual attribute name\r",
							"\r",
							"    // Get the value of the same attribute from the collection variables\r",
							"    var tenantId = pm.environment.get(\"tenantId\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(locationCode).to.eql(tenantId);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"sanction\",\n        \"action\": \"SEARCH\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{senderId}}\"\n    },\n    \"message\": {\n        \"location_code\": \"{{tenantId}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/sanction/_search",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"sanction",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "sanction/_search-location code with pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify location_code Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the value of the attribute from the response body\r",
							"    var locationCode = responseBody.sanctions[0].location_code; // Replace \"attributeName\" with the actual attribute name\r",
							"\r",
							"    // Get the value of the same attribute from the collection variables\r",
							"    var tenantId = pm.environment.get(\"tenantId\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(locationCode).to.eql(tenantId);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"sanction\",\n        \"action\": \"SEARCH\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{senderId}}\"\n    },\n    \"message\": {\n        \"location_code\": \"{{tenantId}}\",\n        \"pagination\": {\n            \"sort_by\": \"program_code\",\n            \"sort_order\": \"DESC\"\n        }\n    }\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/sanction/_search",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"sanction",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "On allocation-create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Capture and Parse Response Body\", function () {\r",
							"    \r",
							"    var responseBody = pm.response.json();\r",
							"    var allocationId = responseBody.message.children[0].id;\r",
							"    pm.collectionVariables.set(\"allocationId\", allocationId);\r",
							"    var allocationType = responseBody.message.allocation_type;\r",
							"    pm.collectionVariables.set(\"allocationType\", allocationType);\r",
							"    // var createdBy = responseBody.message.children[0].audit_details.createdBy;\r",
							"    // pm.collectionVariables.set(\"createdBy\", createdBy);\r",
							"    // var lastModifiedBy = responseBody.message.children[0].audit_details.lastModifiedBy;\r",
							"    // pm.collectionVariables.set(\"lastModifiedBy\", lastModifiedBy);\r",
							"    // var createdTime = responseBody.message.children[0].audit_details.createdTime;\r",
							"    // pm.collectionVariables.set(\"createdTime\", createdTime);\r",
							"    // var lastModifiedTime = responseBody.message.children[0].audit_details.lastModifiedTime;\r",
							"    // pm.collectionVariables.set(\"lastModifiedTime\", lastModifiedTime);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-allocation\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"allocation_type\": \"ALLOCATION\",\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"allocation_type\": \"ALLOCATION\",\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-allocation/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-allocation",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On allocation-create -validation error-senderId same as recieverId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'RECEIVER_ID_SENDER_ID_ERROR' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"ReceiverId should not be same as SenderId\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-allocation\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"allocation_type\": \"{{allocationType}}\",\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"allocation_type\": \"{{allocationType}}\",\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-allocation/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-allocation",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On allocation-create -validation error-header missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.allocationRequest.header\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    // \"header\": {\r\n    //     \"message_id\": \"123\",\r\n    //     \"message_ts\": \"1708428280\",\r\n    //     \"message_type\": \"on-allocation\",\r\n    //     \"action\": \"create\",\r\n    //     \"sender_id\": \"{{senderId}}\",\r\n    //     \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n    //     \"receiver_id\": \"{{receiverId}}\"\r\n    // },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"allocation_type\": \"{{allocationType}}\",\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"allocation_type\": \"{{allocationType}}\",\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-allocation/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-allocation",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On allocation-create -validation error-message missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.allocationRequest.allocation\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-allocation\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    }\r\n    \r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-allocation/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-allocation",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On allocation-create -validation error-locationCode missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.allocationRequest.allocation.locationCode\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-allocation\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        // \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"allocation_type\": \"{{allocationType}}\",\r\n        \"children\": [\r\n            {\r\n                // \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"allocation_type\": \"{{allocationType}}\",\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-allocation/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-allocation",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On allocation-create -validation error-programCode missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.allocationRequest.allocation.programCode\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-allocation\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        // \"program_code\": \"{{pgCode}}\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"allocation_type\": \"{{allocationType}}\",\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                // \"program_code\": \"{{pgCode}}\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"allocation_type\": \"{{allocationType}}\",\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-allocation/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-allocation",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On allocation-create -validation error-allocationType missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.allocationRequest.allocation.allocationType\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-allocation\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\":  {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        // \"allocation_type\": \"{{allocationType}}\",\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                // \"allocation_type\": \"{{allocationType}}\",\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-allocation/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-allocation",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On allocation-create -validation error-netamount missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.allocationRequest.allocation.netAmount\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-allocation\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        // \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"allocation_type\": \"{{allocationType}}\",\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                // \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"allocation_type\": \"{{allocationType}}\",\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-allocation/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-allocation",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On allocation-create -validation error-GrossAmount is null",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.allocationRequest.allocation.grossAmount\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-allocation\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\":  {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"net_amount\": {{netAmount}},\r\n        // \"gross_amount\": {{grossAmount}},\r\n        \"allocation_type\": \"{{allocationType}}\",\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"net_amount\": {{netAmount}},\r\n                // \"gross_amount\": {{grossAmount}},\r\n                \"allocation_type\": \"{{allocationType}}\",\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-allocation/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-allocation",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On allocation-create -validation error-amount is invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===200||pm.response.code===400).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'SANCTIONED_AMOUNT_ERROR'\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-allocation\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\":  {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"allocation_type\": \"{{allocationType}}\",\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": 1000,\r\n                \"allocation_type\": \"{{allocationType}}\",\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-allocation/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-allocation",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "allocation_search-Allocation Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify allocationId Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the value of the attribute from the response body\r",
							"    var allocationId = responseBody.allocations[0].id; // Replace \"attributeName\" with the actual attribute name\r",
							"\r",
							"    // Get the value of the same attribute from the collection variables\r",
							"    var allocationId = pm.collectionVariables.get(\"allocationId\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(allocationId).to.eql(allocationId);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"allocation\",\n        \"action\": \"SEARCH\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{senderId}}\"\n    },\n    \"message\": {\n        \"ids\": [\n            \"{{allocationId}}\"\n        ],\n        \"location_code\": \"{{tenantId}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/allocation/_search",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"allocation",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "allocation_search-program code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify program_code Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the value of the attribute from the response body\r",
							"    var pgCode = responseBody.allocations[0].program_code; // Replace \"attributeName\" with the actual attribute name\r",
							"\r",
							"    // Get the value of the same attribute from the collection variables\r",
							"    var pgCode = pm.collectionVariables.get(\"pgCode\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(pgCode).to.eql(pgCode);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"allocation\",\n        \"action\": \"SEARCH\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{senderId}}\"\n    },\n    \"message\": {\n        \"program_code\": \"{{pgCode}}\",\n        \"location_code\": \"{{tenantId}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/allocation/_search",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"allocation",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "allocation_search-location code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify locationCode Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the value of the attribute from the response body\r",
							"    var locationCode = responseBody.allocations[0].location_code; // Replace \"attributeName\" with the actual attribute name\r",
							"\r",
							"    // Get the value of the same attribute from the collection variables\r",
							"    var locationCode = pm.environment.get(\"tenantId\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(locationCode).to.eql(locationCode);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"allocation\",\n        \"action\": \"SEARCH\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{senderId}}\"\n    },\n    \"message\": {\n        \"location_code\": \"{{tenantId}}\"\n    }\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/allocation/_search",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"allocation",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "allocation_search-location code with pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify locationCode Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the value of the attribute from the response body\r",
							"    var locationCode = responseBody.allocations[0].location_code; // Replace \"attributeName\" with the actual attribute name\r",
							"\r",
							"    // Get the value of the same attribute from the collection variables\r",
							"    var locationCode = pm.environment.get(\"tenantId\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(locationCode).to.eql(locationCode);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\n    \"header\": {\n        \"message_id\": \"123\",\n        \"message_ts\": \"1708428280\",\n        \"message_type\": \"allocation\",\n        \"action\": \"SEARCH\",\n        \"sender_id\": \"{{receiverId}}\",\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\n        \"receiver_id\": \"{{senderId}}\"\n    },\n    \"message\": {\n        \"location_code\": \"{{tenantId}}\",\n        \"pagination\": {\n            \"sort_by\": \"id\",\n            \"sort_order\": \"ASC\"\n        }\n    }\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/allocation/_search",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"allocation",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "On allocation_update-INITIATED",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify response Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify the status is getting updated to INITIATED\", function(){\r",
							"    var responseBody = pm.response.json();\r",
							"    // var allocationId= responseBody.message.id;\r",
							"    // pm.collectionVariables.set(\"allocationId\",allocationId);\r",
							"    var status = responseBody.message.status.status_code;\r",
							"    pm.expect(status).to.eql(\"INITIATED\");\r",
							"    \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-allocation\",\r\n        \"action\": \"update\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\": \"{{allocationId}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"allocation_type\": \"{{allocationType}}\",\r\n        \"children\": [\r\n            {\r\n                \"id\": \"{{allocationId}}\",\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"allocation_type\": \"{{allocationType}}\",\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-allocation/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-allocation",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "On allocation_update-INPROCESS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify status code is updated to INPROCESS\", function () {\r",
							"    \r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.message.status.status_code).to.be.equal(\"INPROCESS\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-allocation\",\r\n        \"action\": \"update\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\": \"{{allocationId}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"allocation_type\": \"{{allocationType}}\",\r\n        \"children\": [\r\n            {\r\n                \"id\": \"{{allocationId}}\",\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"allocation_type\": \"{{allocationType}}\",\r\n                \"status\": {\r\n                    \"status_code\": \"INPROCESS\",\r\n                    \"status_message\": \"INPROCESS\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INPROCESS\",\r\n            \"status_message\": \"INPROCESS\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-allocation/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-allocation",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "On allocation_update-APPROVED",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify response Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify status code is updated to APPROVED\", function () {\r",
							"    \r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.message.status.status_code).to.be.equal(\"APPROVED\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-allocation\",\r\n        \"action\": \"update\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\": \"{{allocationId}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"allocation_type\": \"{{allocationType}}\",\r\n        \"children\": [\r\n            {\r\n                \"id\": \"{{allocationId}}\",\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"allocation_type\": \"{{allocationType}}\",\r\n                \"status\": {\r\n                    \"status_code\": \"APPROVED\",\r\n                    \"status_message\": \"APPROVED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"APPROVED\",\r\n            \"status_message\": \"APPROVED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-allocation/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-allocation",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "On allocation_update-SUCCESSFUL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify response Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify status code is updated to SUCCESSFUL\", function () {\r",
							"    \r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.message.status.status_code).to.be.equal(\"SUCCESSFUL\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-allocation\",\r\n        \"action\": \"update\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\": \"{{allocationId}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"allocation_type\": \"{{allocationType}}\",\r\n        \"children\": [\r\n            {\r\n                \"id\": \"{{allocationId}}\",\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"allocation_type\": \"{{allocationType}}\",\r\n                \"status\": {\r\n                    \"status_code\": \"SUCCESSFUL\",\r\n                    \"status_message\": \"SUCCESSFUL\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"SUCCESSFUL\",\r\n            \"status_message\": \"SUCCESSFUL\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-allocation/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-allocation",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "On allocation_update-FAILED",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify response Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify status code is updated to FAILED\", function () {\r",
							"    \r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.message.status.status_code).to.be.equal(\"FAILED\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"on-allocation\",\r\n        \"action\": \"update\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\": \"{{allocationId}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"allocation_type\": \"{{allocationType}}\",\r\n        \"children\": [\r\n            {\r\n                \"id\": \"{{allocationId}}\",\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"allocation_type\": \"{{allocationType}}\",\r\n                \"status\": {\r\n                    \"status_code\": \"FAILED\",\r\n                    \"status_message\": \"FAILED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"FAILED\",\r\n            \"status_message\": \"FAILED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-allocation/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-allocation",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "On program_create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"header is not missing\", function () {\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.be.an('object');\r",
							"    pm.expect(responseBody).to.have.property('header');\r",
							"    pm.expect(responseBody.header).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Signature is not missing\",function(){\r",
							"     var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.be.an('object');\r",
							"    pm.expect(responseBody).to.have.property('signature');\r",
							"    pm.expect(responseBody.signature).to.exist;\r",
							"})\r",
							"\r",
							"pm.test(\"message is not missing\",function(){\r",
							"     var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.be.an('object');\r",
							"    pm.expect(responseBody).to.have.property('message');\r",
							"    pm.expect(responseBody.message).to.exist;\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"type\":\"{{type}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"name\": \"{{name}}\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"{{description}}\",\r\n        \"start_date\": {{startDate}},\r\n        \"end_date\": {{endDate}},\r\n        \"children\": null,\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-program/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On program_create -Validation error-senderId same as receiverId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'RECEIVER_ID_SENDER_ID_ERROR' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"ReceiverId should not be same as SenderId\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"type\":\"{{type}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"name\": \"{{name}}\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"{{description}}\",\r\n        \"start_date\": {{startDate}},\r\n        \"end_date\": {{endDate}},\r\n        \"children\": null,\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-program/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On program_create -Validation error-senderId missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.programRequest.header.senderId' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": null,\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"type\":\"{{type}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"name\": \"{{name}}\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"{{description}}\",\r\n        \"start_date\": {{startDate}},\r\n        \"end_date\": {{endDate}},\r\n        \"children\": null,\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-program/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On program_create -Validation error-receiverId missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.programRequest.header.receiverId' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": null\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"type\":\"{{type}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"name\": \"{{name}}\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"{{description}}\",\r\n        \"start_date\": {{startDate}},\r\n        \"end_date\": {{endDate}},\r\n        \"children\": null,\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-program/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On program_create -Validation error-Header missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.programRequest.header.' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    // \"header\": {\r\n    //     \"message_id\": \"123\",\r\n    //     \"message_ts\": \"1708428280\",\r\n    //     \"message_type\":\"on-program\",\r\n    //     \"action\": \"create\",\r\n    //     \"sender_id\": \"{{senderId}}\",\r\n    //     \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n    //     \"receiver_id\": null\r\n    // },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"type\":\"{{type}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"name\": \"{{name}}\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"{{description}}\",\r\n        \"start_date\": {{startDate}},\r\n        \"end_date\": {{endDate}},\r\n        \"children\": null,\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-program/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On program_create -Validation error-message missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.programRequest.message' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    }\r\n    // \"message\": {\r\n    //     \"id\":\"{{pgId}}\",\r\n    //     \"type\":\"{{type}}\",\r\n    //     \"location_code\": \"{{tenantId}}\",\r\n    //     \"program_code\": \"{{pgCode}}\",\r\n    //     \"name\": \"{{name}}\",\r\n    //     // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n    //     \"description\": \"{{description}}\",\r\n    //     \"start_date\": {{startDate}},\r\n    //     \"end_date\": {{endDate}},\r\n    //     \"children\": null,\r\n    //     \"status\": {\r\n    //         \"status_code\": \"INITIATED\",\r\n    //         \"status_message\": \"INITIATED\"\r\n    //     },\r\n    //     \"additional_details\": {},\r\n    //     \"function_code\": \"{{funCode}}\",\r\n    //     \"administration_code\": \"{{adminCode}}\",\r\n    //     \"recipient_segment_code\": \"{{recSegCode}}\",\r\n    //     \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n    //     \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n    //     \"target_segment_code\": \"{{targetCode}}\",\r\n    //     \"currency_code\": \"{{currency}}\",\r\n    //     \"locale_code\": \"{{loCode}}\"\r\n    // }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-program/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On program_create -Validation error-locationCode missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.programRequest.locationCode' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"type\":\"{{type}}\",\r\n        // \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"name\": \"{{name}}\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"{{description}}\",\r\n        \"start_date\": {{startDate}},\r\n        \"end_date\": {{endDate}},\r\n        \"children\": null,\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-program/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On program_create -Validation error-name missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.programRequest.name' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"type\":\"{{type}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        // \"name\": \"{{name}}\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"{{description}}\",\r\n        \"start_date\": {{startDate}},\r\n        \"end_date\": {{endDate}},\r\n        \"children\": null,\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-program/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On program_create -Validation error-StartDate missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'Min.programRequest.program.startDate' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"Value must be greater than 0\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-program\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"type\":\"{{type}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"name\": \"{{name}}\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"{{description}}\",\r\n        // \"start_date\": {{startDate}},\r\n        \"end_date\": {{endDate}},\r\n        \"children\": null,\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-program/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-program",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On program_update-INITIATED",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify response Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify the status is getting updated to INITIATED\", function(){\r",
							"    var responseBody = pm.response.json();\r",
							"    // var allocationId= responseBody.message.id;\r",
							"    // pm.collectionVariables.set(\"allocationId\",allocationId);\r",
							"    var status = responseBody.message.status.status_code;\r",
							"    pm.expect(status).to.eql(\"INITIATED\");\r",
							"    \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-program\",\r\n        \"action\": \"update\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"type\":\"{{type}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"name\": \"{{name}}\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"{{description}}\",\r\n        \"start_date\": {{startDate}},\r\n        \"end_date\": {{endDate}},\r\n        \"children\": null,\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-program/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "On program_update-INPROCESS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify response Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify the status is getting updated to INPROCESS\", function(){\r",
							"    var responseBody = pm.response.json();\r",
							"    var status = responseBody.message.status.status_code;\r",
							"    pm.expect(status).to.eql(\"INPROCESS\");\r",
							"    \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-program\",\r\n        \"action\": \"update\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"type\":\"{{type}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"name\": \"{{name}}\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"{{description}}\",\r\n        \"start_date\": {{startDate}},\r\n        \"end_date\": {{endDate}},\r\n        \"children\": null,\r\n        \"status\": {\r\n            \"status_code\": \"INPROCESS\",\r\n            \"status_message\": \"INPROCESS\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-program/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "On program_update-APPROVED",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify response Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify the status is getting updated to APPROVED\", function(){\r",
							"    var responseBody = pm.response.json();\r",
							"    var status = responseBody.message.status.status_code;\r",
							"    pm.expect(status).to.eql(\"APPROVED\");\r",
							"    \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-program\",\r\n        \"action\": \"update\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"type\":\"{{type}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"name\": \"{{name}}\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"{{description}}\",\r\n        \"start_date\": {{startDate}},\r\n        \"end_date\": {{endDate}},\r\n        \"children\": null,\r\n        \"status\": {\r\n            \"status_code\": \"APPROVED\",\r\n            \"status_message\": \"APPROVED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-program/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "On program_update-SUCCESSFUL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify response Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify the status is getting updated to SUCCESSFUL\", function(){\r",
							"    var responseBody = pm.response.json();\r",
							"    var status = responseBody.message.status.status_code;\r",
							"    pm.expect(status).to.eql(\"SUCCESSFUL\");\r",
							"    \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-program\",\r\n        \"action\": \"update\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"type\":\"{{type}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"name\": \"{{name}}\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"{{description}}\",\r\n        \"start_date\": {{startDate}},\r\n        \"end_date\": {{endDate}},\r\n        \"children\": null,\r\n        \"status\": {\r\n            \"status_code\": \"SUCCESSFUL\",\r\n            \"status_message\": \"SUCCESSFUL\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-program/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "On program_update-FAILED",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify response Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify the status is getting updated to FAILED\", function(){\r",
							"    var responseBody = pm.response.json();\r",
							"    var status = responseBody.message.status.status_code;\r",
							"    pm.expect(status).to.eql(\"FAILED\");\r",
							"    \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-program\",\r\n        \"action\": \"update\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{pgId}}\",\r\n        \"type\":\"{{type}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"name\": \"{{name}}\",\r\n        // \"parent_id\": \"251c51eb-e970-4e01-a99a-70136c47a934\",\r\n        \"description\": \"{{description}}\",\r\n        \"start_date\": {{startDate}},\r\n        \"end_date\": {{endDate}},\r\n        \"children\": null,\r\n        \"status\": {\r\n            \"status_code\": \"FAILED\",\r\n            \"status_message\": \"FAILED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-program/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-program",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Extract Programs Object\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the 'programs' object\r",
							"    var disburseObject = responseBody.message.children;\r",
							"\r",
							"    // Set the 'programs' object as a Postman variable\r",
							"    pm.collectionVariables.set(\"disburseObject\", JSON.stringify(disburseObject));\r",
							"});\r",
							"pm.test(\"Capture and Parse Response Body\", function () {\r",
							"    \r",
							"    var responseBody = pm.response.json();\r",
							"    var disbursemantId = responseBody.message.children[0].parent_id;   \r",
							"    pm.collectionVariables.set(\"disbursemantId\", disbursemantId);\r",
							"    var childrenId = responseBody.message.children[0].id;   \r",
							"    pm.collectionVariables.set(\"childrenId\", childrenId);\r",
							"    var targetId = responseBody.message.target_id;\r",
							"    pm.collectionVariables.set(\"targetId\",targetId);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var identifier = \"EP/1013/2023-24/03/12/000157\";\r",
							"var numericPart = identifier.match(/\\d+$/)[0];\r",
							"// Converting the numeric part to a number and incrementing it by 1\r",
							"var incrementedNumericPart = parseInt(numericPart) + 1;\r",
							"\r",
							"// Padding the incremented numeric part with leading zeros\r",
							"var formattedNumericPart = incrementedNumericPart.toString().padStart(numericPart.length, '0');\r",
							"// Formatting the new identifier\r",
							"var targetID = identifier.replace(/\\d+$/, formattedNumericPart);\r",
							"// Set the variable in the pre-request script\r",
							"pm.variables.set(\"targetID\", \"targetID\");\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"Disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"target_id\": \"{{targetID}}\",\r\n        \"transaction_id\": null,\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"individual\": null,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"target_id\":\"{{targetID}}\",\r\n                \"transaction_id\": null,\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"individual\": {\r\n                    \"name\": \"LC\",\r\n                    \"email\": \"string\",\r\n                    \"phone\": \"9999999999\",\r\n                    \"pin\": \"string\",\r\n                    \"address\": \"pg.citya\"\r\n                },\r\n                \"children\":null,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create-validation error-senderId and recieverId same",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'ReceiverId should not be same as SenderId' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be nul\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"Disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"target_id\": \"{{targetID}}\",\r\n        \"transaction_id\": null,\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"individual\": null,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"target_id\": \"{{targetID}}\",\r\n                \"transaction_id\": null,\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"individual\": {\r\n                    \"name\": \"LC\",\r\n                    \"email\": \"string\",\r\n                    \"phone\": \"9999999999\",\r\n                    \"pin\": \"string\",\r\n                    \"address\": \"pg.citya\"\r\n                },\r\n                \"children\": null,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create-validation error-Header missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.disbursementRequest.header' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be nul\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    // \"header\": {\r\n    //     \"message_id\": \"123\",\r\n    //     \"message_ts\": \"1708428280\",\r\n    //     \"message_type\": \"Disburse\",\r\n    //     \"action\": \"create\",\r\n    //     \"sender_id\": \"{{receiverId}}\",\r\n    //     \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n    //     \"receiver_id\": \"{{senderId}}\"\r\n    // },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"target_id\": \"{{targetID}}\",\r\n        \"transaction_id\": null,\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"individual\": null,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"target_id\":\"{{targetID}}\",\r\n                \"transaction_id\": null,\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"individual\": {\r\n                    \"name\": \"LC\",\r\n                    \"email\": \"string\",\r\n                    \"phone\": \"9999999999\",\r\n                    \"pin\": \"string\",\r\n                    \"address\": \"pg.citya\"\r\n                },\r\n                \"children\":null,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create-validation error-message missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.disbursementRequest.disbursement' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be nul\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"Disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    }\r\n    // \"message\": {\r\n    //     \"location_code\": \"{{tenantId}}\",\r\n    //     \"program_code\": \"{{pgCode}}\",\r\n    //     \"target_id\": \"{{targetID}}\",\r\n    //     \"transaction_id\": null,\r\n    //     \"sanction_id\": \"{{sanctionId}}\",\r\n    //     \"account_code\": \"1234567890@SBIN0003491\",\r\n    //     \"net_amount\": {{netAmount}},\r\n    //     \"gross_amount\": {{grossAmount}},\r\n    //     \"individual\": null,\r\n    //     \"children\": [\r\n    //         {\r\n    //             \"location_code\": \"{{tenantId}}\",\r\n    //             \"program_code\": \"{{pgCode}}\",\r\n    //             \"target_id\":\"{{targetID}}\",\r\n    //             \"transaction_id\": null,\r\n    //             \"sanction_id\": \"{{sanctionId}}\",\r\n    //             \"account_code\": \"1234567890@SBIN0003491\",\r\n    //             \"net_amount\": {{netAmount}},\r\n    //             \"gross_amount\": {{grossAmount}},\r\n    //             \"individual\": {\r\n    //                 \"name\": \"LC\",\r\n    //                 \"email\": \"string\",\r\n    //                 \"phone\": \"9999999999\",\r\n    //                 \"pin\": \"string\",\r\n    //                 \"address\": \"pg.citya\"\r\n    //             },\r\n    //             \"children\":null,\r\n    //             \"status\": {\r\n    //                 \"status_code\": \"INITIATED\",\r\n    //                 \"status_message\": \"INITIATED\"\r\n    //             },\r\n    //             \"additional_details\": {},\r\n    //             \"function_code\": \"{{funCode}}\",\r\n    //             \"administration_code\": \"{{adminCode}}\",\r\n    //             \"recipient_segment_code\": \"{{recSegCode}}\",\r\n    //             \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n    //             \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n    //             \"target_segment_code\": \"{{targetCode}}\",\r\n    //             \"currency_code\": \"{{currency}}\",\r\n    //             \"locale_code\": \"{{loCode}}\"\r\n    //         }\r\n    //     ],\r\n    //     \"status\": {\r\n    //         \"status_code\": \"INITIATED\",\r\n    //         \"status_message\": \"INITIATED\"\r\n    //     },\r\n    //     \"additional_details\": {},\r\n    //     \"function_code\": \"{{funCode}}\",\r\n    //     \"administration_code\": \"{{adminCode}}\",\r\n    //     \"recipient_segment_code\": \"{{recSegCode}}\",\r\n    //     \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n    //     \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n    //     \"target_segment_code\": \"{{targetCode}}\",\r\n    //     \"currency_code\": \"{{currency}}\",\r\n    //     \"locale_code\": \"{{loCode}}\"\r\n    // }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create-validation error-Disbursements missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NullPointerException' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be nul\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"Disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"target_id\": \"{{targetID}}\",\r\n        \"transaction_id\": null,\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"individual\": null,\r\n        // \"children\": [\r\n        //     {\r\n        //         \"location_code\": \"{{tenantId}}\",\r\n        //         \"program_code\": \"{{pgCode}}\",\r\n        //         \"target_id\":\"{{targetID}}\",\r\n        //         \"transaction_id\": null,\r\n        //         \"sanction_id\": \"{{sanctionId}}\",\r\n        //         \"account_code\": \"1234567890@SBIN0003491\",\r\n        //         \"net_amount\": {{netAmount}},\r\n        //         \"gross_amount\": {{grossAmount}},\r\n        //         \"individual\": {\r\n        //             \"name\": \"LC\",\r\n        //             \"email\": \"string\",\r\n        //             \"phone\": \"9999999999\",\r\n        //             \"pin\": \"string\",\r\n        //             \"address\": \"pg.citya\"\r\n        //         },\r\n        //         \"children\":null,\r\n        //         \"status\": {\r\n        //             \"status_code\": \"INITIATED\",\r\n        //             \"status_message\": \"INITIATED\"\r\n        //         },\r\n        //         \"additional_details\": {},\r\n        //         \"function_code\": \"{{funCode}}\",\r\n        //         \"administration_code\": \"{{adminCode}}\",\r\n        //         \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        //         \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        //         \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        //         \"target_segment_code\": \"{{targetCode}}\",\r\n        //         \"currency_code\": \"{{currency}}\",\r\n        //         \"locale_code\": \"{{loCode}}\"\r\n        //     }\r\n        // ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create-validation error-sanctionId missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NullPointerException' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be nul\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"Disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\":{\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"target_id\": \"{{targetID}}\",\r\n        \"transaction_id\": null,\r\n        // \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"individual\": null,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"target_id\":\"{{targetID}}\",\r\n                \"transaction_id\": null,\r\n                // \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"individual\": {\r\n                    \"name\": \"LC\",\r\n                    \"email\": \"string\",\r\n                    \"phone\": \"9999999999\",\r\n                    \"pin\": \"string\",\r\n                    \"address\": \"pg.citya\"\r\n                },\r\n                \"children\":null,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create-validation error-locationCode missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.disbursementRequest.disbursement.locationCode' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"Disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        // \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"target_id\": \"{{targetID}}\",\r\n        \"transaction_id\": null,\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"individual\": null,\r\n        \"children\": [\r\n            {\r\n                // \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"target_id\":\"{{targetID}}\",\r\n                \"transaction_id\": null,\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"individual\": {\r\n                    \"name\": \"LC\",\r\n                    \"email\": \"string\",\r\n                    \"phone\": \"9999999999\",\r\n                    \"pin\": \"string\",\r\n                    \"address\": \"pg.citya\"\r\n                },\r\n                \"children\":null,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create-validation error-programCode missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.disbursementRequest.disbursement.programCode' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"Disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        // \"program_code\": \"{{pgCode}}\",\r\n        \"target_id\": \"{{targetID}}\",\r\n        \"transaction_id\": null,\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"individual\": null,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                // \"program_code\": \"{{pgCode}}\",\r\n                \"target_id\":\"{{targetID}}\",\r\n                \"transaction_id\": null,\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"individual\": {\r\n                    \"name\": \"LC\",\r\n                    \"email\": \"string\",\r\n                    \"phone\": \"9999999999\",\r\n                    \"pin\": \"string\",\r\n                    \"address\": \"pg.citya\"\r\n                },\r\n                \"children\":null,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create-validation error-net amount missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.disbursementRequest.disbursement.netAmount' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"Disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\":{\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"target_id\": \"{{targetID}}\",\r\n        \"transaction_id\": null,\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        // \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"individual\": null,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"target_id\":\"{{targetID}}\",\r\n                \"transaction_id\": null,\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                // \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"individual\": {\r\n                    \"name\": \"LC\",\r\n                    \"email\": \"string\",\r\n                    \"phone\": \"9999999999\",\r\n                    \"pin\": \"string\",\r\n                    \"address\": \"pg.citya\"\r\n                },\r\n                \"children\":null,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create-validation error-gross amount missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===400||pm.response.code===403).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.disbursementRequest.disbursement.grossAmount' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"Disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"target_id\": \"{{targetID}}\",\r\n        \"transaction_id\": null,\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": {{netAmount}},\r\n        // \"gross_amount\": {{grossAmount}},\r\n        \"individual\": null,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"target_id\":\"{{targetID}}\",\r\n                \"transaction_id\": null,\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": {{netAmount}},\r\n                // \"gross_amount\": {{grossAmount}},\r\n                \"individual\": {\r\n                    \"name\": \"LC\",\r\n                    \"email\": \"string\",\r\n                    \"phone\": \"9999999999\",\r\n                    \"pin\": \"string\",\r\n                    \"address\": \"pg.citya\"\r\n                },\r\n                \"children\":null,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create-validation error-individual missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===200||pm.response.code===400).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'INDIVIDUAL_ERROR Individual should not be null' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\" INDIVIDUAL_ERROR Individual should not be null \");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"Disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"target_id\": \"{{targetID}}\",\r\n        \"transaction_id\": null,\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"individual\": null,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"target_id\":\"{{targetID}}\",\r\n                \"transaction_id\": null,\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                // \"individual\": {\r\n                //     \"name\": \"LC\",\r\n                //     \"email\": \"string\",\r\n                //     \"phone\": \"9999999999\",\r\n                //     \"pin\": \"string\",\r\n                //     \"address\": \"pg.citya\"\r\n                // },\r\n                \"children\":null,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create-validation error-Name missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===200||pm.response.code===400).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.disbursementRequest.disbursement.individual.name' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"Disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"target_id\": \"{{targetID}}\",\r\n        \"transaction_id\": null,\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"individual\": null,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"target_id\":\"{{targetID}}\",\r\n                \"transaction_id\": null,\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"individual\": {\r\n                    // \"name\": \"LC\",\r\n                    \"email\": \"string\",\r\n                    \"phone\": \"9999999999\",\r\n                    \"pin\": \"string\",\r\n                    \"address\": \"pg.citya\"\r\n                },\r\n                \"children\":null,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create-validation error-Phone missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===200||pm.response.code===400).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.disbursementRequest.disbursement.individual.phone' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"Disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"target_id\": \"{{targetID}}\",\r\n        \"transaction_id\": null,\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"individual\": null,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"target_id\":\"{{targetID}}\",\r\n                \"transaction_id\": null,\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"individual\": {\r\n                    \"name\": \"LC\",\r\n                    \"email\": \"string\",\r\n                    // \"phone\": \"9999999999\",\r\n                    \"pin\": \"string\",\r\n                    \"address\": \"pg.citya\"\r\n                },\r\n                \"children\":null,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create-validation error-Address missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===200||pm.response.code===400).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.disbursementRequest.disbursement.individual.address' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"Disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\":{\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"target_id\": \"{{targetID}}\",\r\n        \"transaction_id\": null,\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"individual\": null,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"target_id\":\"{{targetID}}\",\r\n                \"transaction_id\": null,\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"individual\": {\r\n                    \"name\": \"LC\",\r\n                    \"email\": \"string\",\r\n                    \"phone\": \"9999999999\",\r\n                    \"pin\": \"string\"\r\n                    // \"address\": \"pg.citya\"\r\n                },\r\n                \"children\":null,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create-validation error-TargetId missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===200||pm.response.code===400).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'NotNull.disbursementRequest.disbursement.individual.targetId' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"must not be null\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"Disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        // \"target_id\": \"{{targetID}}\",\r\n        \"transaction_id\": null,\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"individual\": null,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                // \"target_id\":\"{{targetID}}\",\r\n                \"transaction_id\": null,\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": {{grossAmount}},\r\n                \"individual\": {\r\n                    \"name\": \"LC\",\r\n                    \"email\": \"string\",\r\n                    \"phone\": \"9999999999\",\r\n                    \"pin\": \"string\",\r\n                    \"address\": \"pg.citya\"\r\n                },\r\n                \"children\":null,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_create-validation error-sum of disbursement amount is not equal to message amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Define a test to run after the response is received\r",
							"pm.test(\"Check response is Bad Request\", function () {\r",
							"    // Check if the response status is 400\r",
							"    pm.expect(pm.response.code===200||pm.response.code===400).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have 'DISBURSEMENT_GROSS_AMOUNT_ERROR Disbursement amount should be equal to child disbursement gross amount' error\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    if (jsonData.error) {\r",
							"        console.error(\"Error detected: \" + jsonData.error);\r",
							"    // You can handle the error as per your requirements, for example:\r",
							"        pm.response.to.be.error(); \r",
							"//      throw new Error(\"Error detected: \" + jsonData.error);\r",
							"        pm.expect.jsonData.to.be.eql(\"DISBURSEMENT_GROSS_AMOUNT_ERROR Disbursement amount should be equal to child disbursement gross amount\");\r",
							"    } else {\r",
							"    console.log(\"No errors detected in the response\");\r",
							"    // Continue with your regular tests or script logic\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"Disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"target_id\": \"{{targetID}}\",\r\n        \"transaction_id\": null,\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": {{netAmount}},\r\n        \"gross_amount\": {{grossAmount}},\r\n        \"individual\": null,\r\n        \"children\": [\r\n            {\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"{{pgCode}}\",\r\n                \"target_id\":\"{{targetID}}\",\r\n                \"transaction_id\": null,\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": {{netAmount}},\r\n                \"gross_amount\": 2500,\r\n                \"individual\": {\r\n                    \"name\": \"LC\",\r\n                    \"email\": \"string\",\r\n                    \"phone\": \"9999999999\",\r\n                    \"pin\": \"string\",\r\n                    \"address\": \"pg.citya\"\r\n                },\r\n                \"children\":null,\r\n                \"status\": {\r\n                    \"status_code\": \"INITIATED\",\r\n                    \"status_message\": \"INITIATED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"{{funCode}}\",\r\n                \"administration_code\": \"{{adminCode}}\",\r\n                \"recipient_segment_code\": \"{{recSegCode}}\",\r\n                \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n                \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n                \"target_segment_code\": \"{{targetCode}}\",\r\n                \"currency_code\": \"{{currency}}\",\r\n                \"locale_code\": \"{{loCode}}\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"INITIATED\",\r\n            \"status_message\": \"INITIATED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"{{funCode}}\",\r\n        \"administration_code\": \"{{adminCode}}\",\r\n        \"recipient_segment_code\": \"{{recSegCode}}\",\r\n        \"economic_segment_code\": \"{{ecoSegCode}}\",\r\n        \"source_of_fund_code\": \"{{sourceFundCode}}\",\r\n        \"target_segment_code\": \"{{targetCode}}\",\r\n        \"currency_code\": \"{{currency}}\",\r\n        \"locale_code\": \"{{loCode}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_Search-targetId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify target_id Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the value of the attribute from the response body\r",
							"    var targetId = responseBody.disbursements[0].target_id; // Replace \"attributeName\" with the actual attribute name\r",
							"\r",
							"    // Get the value of the same attribute from the collection variables\r",
							"    var targetId = pm.collectionVariables.get(\"targetId\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(targetId).to.eql(targetId);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"disburse\",\r\n        \"action\": \"SEARCH\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"target_id\": \"{{targetId}}\",\r\n        \"location_code\": \"{{tenantId}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/disburse/_search",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_Search-programCode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify program_code Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the value of the attribute from the response body\r",
							"    var programCode = responseBody.disbursements[0].program_code; // Replace \"attributeName\" with the actual attribute name\r",
							"\r",
							"    // Get the value of the same attribute from the collection variables\r",
							"    var pgCode = pm.collectionVariables.get(\"pgCode\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(programCode).to.eql(pgCode);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"disburse\",\r\n        \"action\": \"SEARCH\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"program_code\": \"{{pgCode}}\",\r\n        \"location_code\": \"{{tenantId}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_search",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_Search-LocationCode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify locationCode Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the value of the attribute from the response body\r",
							"    var locationCode = responseBody.disbursements[0].location_code; // Replace \"attributeName\" with the actual attribute name\r",
							"\r",
							"    // Get the value of the same attribute from the collection variables\r",
							"    var tenantId = pm.environment.get(\"tenantId\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(locationCode).to.eql(tenantId);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"Signature:  namespace=\\\"g2p\\\", kidId=\\\"{sender_id}|{unique_key_id}|{algorithm}\\\", algorithm=\\\"ed25519\\\", created=\\\"1606970629\\\", expires=\\\"1607030629\\\", headers=\\\"(created) (expires) digest\\\", signature=\\\"Base64(signing content)\",\r\n    \"header\": {\r\n        \"version\": \"1.0.0\",\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"\",\r\n        \"message_type\": \"disburse\",\r\n        \"action\": \"SEARCH\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\",\r\n        \"total_count\": 21800,\r\n        \"is_msg_encrypted\": false\r\n    },\r\n    \"message\": {\r\n        \"location_code\": \"{{tenantId}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_search",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Disburse_Search-Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify Status Code is 200 or 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify disbursemantId Value\", function () {\r",
							"    // Parse the response body\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    // Extract the value of the attribute from the response body\r",
							"    var disbursemantId = responseBody.disbursements[0].id; // Replace \"attributeName\" with the actual attribute name\r",
							"\r",
							"    // Get the value of the same attribute from the collection variables\r",
							"    var disbursemantId = pm.collectionVariables.get(\"disbursemantId\"); // Replace \"variableName\" with the name of the collection variable\r",
							"\r",
							"    // Verify if the values are equal\r",
							"    pm.expect(disbursemantId).to.eql(disbursemantId);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"Signature:  namespace=\\\"g2p\\\", kidId=\\\"{sender_id}|{unique_key_id}|{algorithm}\\\", algorithm=\\\"ed25519\\\", created=\\\"1606970629\\\", expires=\\\"1607030629\\\", headers=\\\"(created) (expires) digest\\\", signature=\\\"Base64(signing content)\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"\",\r\n        \"message_type\": \"disburse\",\r\n        \"action\": \"SEARCH\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\",\r\n        \"is_msg_encrypted\": false\r\n    },\r\n    \"message\": {\r\n        \"ids\": [\r\n            \"{{disbursemantId}}\",\r\n            \"{{childrenId}}\"\r\n        ],\r\n        \"location_code\": \"{{tenantId}}\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/disburse/_search",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_search"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"program@https://spp.example.org/\",\r\n    \"is_msg_encrypted\": false\r\n  },\r\n  \"message\": {\r\n            \"id\": \"23456tygv-vghjdfhyu-zoyyu-uuyyh\",\r\n            \"function_code\": \"FC001\",\r\n            \"administration_code\": \"AC002\",\r\n            \"recipient_segment_code\": \"RSC003\",\r\n            \"economic_segment_code\": \"ESC004\",\r\n            \"source_of_fund_code\": \"SFC005\",\r\n            \"target_segment_code\": \"TSC006\",\r\n            \"currency_code\": null,\r\n            \"locale_code\": null,\r\n            \"status\": {\r\n                \"status_code\": \"ERROR\",\r\n                \"status_message\": \"DISBURSEMENT_ALREADY PRESENT_ERROR Disbursement already present for target id: EP/1013/2023-24/03/06/000108\"\r\n            },\r\n            \"location_code\": \"pg.citya\",\r\n            \"program_code\": \"PG/2023-24/000358\",\r\n            \"target_id\": \"EP/1013/2023-24/03/06/000108\",\r\n            \"parent_id\": null,\r\n            \"sanction_id\": \"c8a6c461-abe7-4cac-b607-c354197c0b89\",\r\n            \"transaction_id\": null,\r\n            \"account_code\": \"1234567890@SBIN0003491\",\r\n            \"net_amount\": 100.0,\r\n            \"gross_amount\": 100.0,\r\n            \"individual\": {\r\n                \"name\": \"string\",\r\n                \"email\": \"string\",\r\n                \"phone\": \"string\",\r\n                \"pin\": \"string\",\r\n                \"address\": \"string\"\r\n            },\r\n            \"additional_details\": null,\r\n            \"audit_details\": {\r\n                \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n                \"lastModifiedBy\": \"program@https://unified-qa.digit.org/\",\r\n                \"createdTime\": 1710161533169,\r\n                \"lastModifiedTime\": 1710161534539\r\n            },\r\n            \"children\": [\r\n                {\r\n                    \"id\": \"ftgyuew89ejdod-ndhdhdhhe7-3tyfhed-sjhj\",\r\n                    \"function_code\": \"FC001\",\r\n                    \"administration_code\": \"AC002\",\r\n                    \"recipient_segment_code\": \"RSC003\",\r\n                    \"economic_segment_code\": \"ESC004\",\r\n                    \"source_of_fund_code\": \"SFC005\",\r\n                    \"target_segment_code\": \"TSC006\",\r\n                    \"currency_code\": null,\r\n                    \"locale_code\": null,\r\n                    \"status\": {\r\n                        \"status_code\": \"ERROR\",\r\n                        \"status_message\": \"DISBURSEMENT_ALREADY PRESENT_ERROR Disbursement already present for target id: EP/1013/2023-24/03/06/000108\"\r\n                    },\r\n                    \"location_code\": \"pg.citya\",\r\n                    \"program_code\": \"PG/2023-24/000358\",\r\n                    \"target_id\": \"EP/1013/2023-24/03/06/000108\",\r\n                    \"parent_id\": \"23456tygv-vghjdfhyu-zoyyu-uuyyh\",\r\n                    \"sanction_id\": \"c8a6c461-abe7-4cac-b607-c354197c0b89\",\r\n                    \"transaction_id\": \"PI/2023-24/00001,BENF/2023-24/00001\",\r\n                    \"account_code\": \"1234567890@SBIN0003491\",\r\n                    \"net_amount\": 100.0,\r\n                    \"gross_amount\": 100.0,\r\n                    \"individual\": {\r\n                        \"name\": \"string\",\r\n                        \"email\": \"string\",\r\n                        \"phone\": \"string\",\r\n                        \"pin\": \"string\",\r\n                        \"address\": \"string\"\r\n                    },\r\n                    \"additional_details\": null,\r\n                    \"audit_details\": {\r\n                        \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n                        \"lastModifiedBy\": \"program@https://unified-qa.digit.org/\",\r\n                        \"createdTime\": 1710161533169,\r\n                        \"lastModifiedTime\": 1710161534539\r\n                    },\r\n                    \"children\": null\r\n                }\r\n            ]\r\n        }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create_senderId same as recieverId",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"{{senderId}}\",\r\n    \"is_msg_encrypted\": false\r\n  },\r\n  \"message\": {\r\n    \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n    \"function_code\": null,\r\n    \"administration_code\": null,\r\n    \"recipient_segment_code\": null,\r\n    \"economic_segment_code\": null,\r\n    \"source_of_fund_code\": null,\r\n    \"target_segment_code\": null,\r\n    \"currency_code\": null,\r\n    \"locale_code\": null,\r\n    \"status\": {\r\n      \"status_code\": \"ERROR\",\r\n      \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    },\r\n    \"location_code\": \"pg.citya\",\r\n    \"program_code\": \"PG/2023-24/000358\",\r\n    \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n    \"parent_id\": null,\r\n    \"sanction_id\": null,\r\n    \"transaction_id\": null,\r\n    \"account_code\": null,\r\n    \"net_amount\": 9870,\r\n    \"gross_amount\": 9870,\r\n    \"individual\": null,\r\n    \"additional_details\": {\r\n      \"billNumbers\": [\r\n        \"PB/2023-24/000563\"\r\n      ],\r\n      \"referenceIds\": [\r\n        \"WO/2023-24/000955_PR_000496\"\r\n      ]\r\n    },\r\n    \"audit_details\": {\r\n      \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n      \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n      \"createdTime\": 1709201812840,\r\n      \"lastModifiedTime\": 1709201812840\r\n    },\r\n    \"children\": [\r\n      {\r\n        \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"333367679912@SBIN0000063\",\r\n        \"net_amount\": 8870,\r\n        \"gross_amount\": 8870,\r\n        \"individual\": {\r\n          \"name\": \"roso\",\r\n          \"email\": null,\r\n          \"phone\": \"9876678790\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      },\r\n      {\r\n        \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"XYZ1230987@SBI000007\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"individual\": {\r\n          \"name\": \"LC\",\r\n          \"email\": null,\r\n          \"phone\": \"9999999999\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      }\r\n    ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create-Header missing",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n//   \"header\": {\r\n//     \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n//     \"message_ts\": 1709201812700,\r\n//     \"message_type\": \"on-disburse\",\r\n//     \"action\": \"create\",\r\n//     \"sender_id\": \"{{senderId}}\",\r\n//     \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n//     \"receiver_id\": \"{{receiverId}}\",\r\n//     \"is_msg_encrypted\": false\r\n//   },\r\n  \"message\": {\r\n    \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n    \"function_code\": null,\r\n    \"administration_code\": null,\r\n    \"recipient_segment_code\": null,\r\n    \"economic_segment_code\": null,\r\n    \"source_of_fund_code\": null,\r\n    \"target_segment_code\": null,\r\n    \"currency_code\": null,\r\n    \"locale_code\": null,\r\n    \"status\": {\r\n      \"status_code\": \"ERROR\",\r\n      \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    },\r\n    \"location_code\": \"pg.citya\",\r\n    \"program_code\": \"PG/2023-24/000358\",\r\n    \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n    \"parent_id\": null,\r\n    \"sanction_id\": null,\r\n    \"transaction_id\": null,\r\n    \"account_code\": null,\r\n    \"net_amount\": 9870,\r\n    \"gross_amount\": 9870,\r\n    \"individual\": null,\r\n    \"additional_details\": {\r\n      \"billNumbers\": [\r\n        \"PB/2023-24/000563\"\r\n      ],\r\n      \"referenceIds\": [\r\n        \"WO/2023-24/000955_PR_000496\"\r\n      ]\r\n    },\r\n    \"audit_details\": {\r\n      \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n      \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n      \"createdTime\": 1709201812840,\r\n      \"lastModifiedTime\": 1709201812840\r\n    },\r\n    \"children\": [\r\n      {\r\n        \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"333367679912@SBIN0000063\",\r\n        \"net_amount\": 8870,\r\n        \"gross_amount\": 8870,\r\n        \"individual\": {\r\n          \"name\": \"roso\",\r\n          \"email\": null,\r\n          \"phone\": \"9876678790\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      },\r\n      {\r\n        \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"XYZ1230987@SBI000007\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"individual\": {\r\n          \"name\": \"LC\",\r\n          \"email\": null,\r\n          \"phone\": \"9999999999\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      }\r\n    ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create-message missing",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"{{receiverId}}\",\r\n    \"is_msg_encrypted\": false\r\n  }\r\n//   \"message\": {\r\n//     \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n//     \"function_code\": null,\r\n//     \"administration_code\": null,\r\n//     \"recipient_segment_code\": null,\r\n//     \"economic_segment_code\": null,\r\n//     \"source_of_fund_code\": null,\r\n//     \"target_segment_code\": null,\r\n//     \"currency_code\": null,\r\n//     \"locale_code\": null,\r\n//     \"status\": {\r\n//       \"status_code\": \"ERROR\",\r\n//       \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n//     },\r\n//     \"location_code\": \"pg.citya\",\r\n//     \"program_code\": \"PG/2023-24/000358\",\r\n//     \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n//     \"parent_id\": null,\r\n//     \"sanction_id\": null,\r\n//     \"transaction_id\": null,\r\n//     \"account_code\": null,\r\n//     \"net_amount\": 9870,\r\n//     \"gross_amount\": 9870,\r\n//     \"individual\": null,\r\n//     \"additional_details\": {\r\n//       \"billNumbers\": [\r\n//         \"PB/2023-24/000563\"\r\n//       ],\r\n//       \"referenceIds\": [\r\n//         \"WO/2023-24/000955_PR_000496\"\r\n//       ]\r\n//     },\r\n//     \"audit_details\": {\r\n//       \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n//       \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n//       \"createdTime\": 1709201812840,\r\n//       \"lastModifiedTime\": 1709201812840\r\n//     },\r\n//     \"children\": [\r\n//       {\r\n//         \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n//         \"function_code\": null,\r\n//         \"administration_code\": null,\r\n//         \"recipient_segment_code\": null,\r\n//         \"economic_segment_code\": null,\r\n//         \"source_of_fund_code\": null,\r\n//         \"target_segment_code\": null,\r\n//         \"currency_code\": \"INR\",\r\n//         \"locale_code\": \"en_IN\",\r\n//         \"status\": {\r\n//           \"status_code\": \"ERROR\",\r\n//           \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n//         },\r\n//         \"location_code\": \"pg.citya\",\r\n//         \"program_code\": \"PG/2023-24/000358\",\r\n//         \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n//         \"parent_id\": null,\r\n//         \"sanction_id\": null,\r\n//         \"transaction_id\": null,\r\n//         \"account_code\": \"333367679912@SBIN0000063\",\r\n//         \"net_amount\": 8870,\r\n//         \"gross_amount\": 8870,\r\n//         \"individual\": {\r\n//           \"name\": \"roso\",\r\n//           \"email\": null,\r\n//           \"phone\": \"9876678790\",\r\n//           \"pin\": null,\r\n//           \"address\": \"pg.citya\"\r\n//         },\r\n//         \"additional_details\": null,\r\n//         \"audit_details\": {\r\n//           \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n//           \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n//           \"createdTime\": 1709201812840,\r\n//           \"lastModifiedTime\": 1709201812840\r\n//         },\r\n//         \"children\": null\r\n//       },\r\n//       {\r\n//         \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n//         \"function_code\": null,\r\n//         \"administration_code\": null,\r\n//         \"recipient_segment_code\": null,\r\n//         \"economic_segment_code\": null,\r\n//         \"source_of_fund_code\": null,\r\n//         \"target_segment_code\": null,\r\n//         \"currency_code\": \"INR\",\r\n//         \"locale_code\": \"en_IN\",\r\n//         \"status\": {\r\n//           \"status_code\": \"ERROR\",\r\n//           \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n//         },\r\n//         \"location_code\": \"pg.citya\",\r\n//         \"program_code\": \"PG/2023-24/000358\",\r\n//         \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n//         \"parent_id\": null,\r\n//         \"sanction_id\": null,\r\n//         \"transaction_id\": null,\r\n//         \"account_code\": \"XYZ1230987@SBI000007\",\r\n//         \"net_amount\": 1000,\r\n//         \"gross_amount\": 1000,\r\n//         \"individual\": {\r\n//           \"name\": \"LC\",\r\n//           \"email\": null,\r\n//           \"phone\": \"9999999999\",\r\n//           \"pin\": null,\r\n//           \"address\": \"pg.citya\"\r\n//         },\r\n//         \"additional_details\": null,\r\n//         \"audit_details\": {\r\n//           \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n//           \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n//           \"createdTime\": 1709201812840,\r\n//           \"lastModifiedTime\": 1709201812840\r\n//         },\r\n//         \"children\": null\r\n//       }\r\n//     ]\r\n//   }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create-disbursement missing",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"{{receiverId}}\",\r\n    \"is_msg_encrypted\": false\r\n  },\r\n  \"message\": {\r\n    \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n    \"function_code\": null,\r\n    \"administration_code\": null,\r\n    \"recipient_segment_code\": null,\r\n    \"economic_segment_code\": null,\r\n    \"source_of_fund_code\": null,\r\n    \"target_segment_code\": null,\r\n    \"currency_code\": null,\r\n    \"locale_code\": null,\r\n    \"status\": {\r\n      \"status_code\": \"ERROR\",\r\n      \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    },\r\n    \"location_code\": \"pg.citya\",\r\n    \"program_code\": \"PG/2023-24/000358\",\r\n    \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n    \"parent_id\": null,\r\n    \"sanction_id\": null,\r\n    \"transaction_id\": null,\r\n    \"account_code\": null,\r\n    \"net_amount\": 9870,\r\n    \"gross_amount\": 9870,\r\n    \"individual\": null,\r\n    \"additional_details\": {\r\n      \"billNumbers\": [\r\n        \"PB/2023-24/000563\"\r\n      ],\r\n      \"referenceIds\": [\r\n        \"WO/2023-24/000955_PR_000496\"\r\n      ]\r\n    },\r\n    \"audit_details\": {\r\n      \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n      \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n      \"createdTime\": 1709201812840,\r\n      \"lastModifiedTime\": 1709201812840\r\n    }\r\n    // \"children\": [\r\n    //   {\r\n    //     \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n    //     \"function_code\": null,\r\n    //     \"administration_code\": null,\r\n    //     \"recipient_segment_code\": null,\r\n    //     \"economic_segment_code\": null,\r\n    //     \"source_of_fund_code\": null,\r\n    //     \"target_segment_code\": null,\r\n    //     \"currency_code\": \"INR\",\r\n    //     \"locale_code\": \"en_IN\",\r\n    //     \"status\": {\r\n    //       \"status_code\": \"ERROR\",\r\n    //       \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    //     },\r\n    //     \"location_code\": \"pg.citya\",\r\n    //     \"program_code\": \"PG/2023-24/000358\",\r\n    //     \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n    //     \"parent_id\": null,\r\n    //     \"sanction_id\": null,\r\n    //     \"transaction_id\": null,\r\n    //     \"account_code\": \"333367679912@SBIN0000063\",\r\n    //     \"net_amount\": 8870,\r\n    //     \"gross_amount\": 8870,\r\n    //     \"individual\": {\r\n    //       \"name\": \"roso\",\r\n    //       \"email\": null,\r\n    //       \"phone\": \"9876678790\",\r\n    //       \"pin\": null,\r\n    //       \"address\": \"pg.citya\"\r\n    //     },\r\n    //     \"additional_details\": null,\r\n    //     \"audit_details\": {\r\n    //       \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n    //       \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n    //       \"createdTime\": 1709201812840,\r\n    //       \"lastModifiedTime\": 1709201812840\r\n    //     },\r\n    //     \"children\": null\r\n    //   },\r\n    //   {\r\n    //     \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n    //     \"function_code\": null,\r\n    //     \"administration_code\": null,\r\n    //     \"recipient_segment_code\": null,\r\n    //     \"economic_segment_code\": null,\r\n    //     \"source_of_fund_code\": null,\r\n    //     \"target_segment_code\": null,\r\n    //     \"currency_code\": \"INR\",\r\n    //     \"locale_code\": \"en_IN\",\r\n    //     \"status\": {\r\n    //       \"status_code\": \"ERROR\",\r\n    //       \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    //     },\r\n    //     \"location_code\": \"pg.citya\",\r\n    //     \"program_code\": \"PG/2023-24/000358\",\r\n    //     \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n    //     \"parent_id\": null,\r\n    //     \"sanction_id\": null,\r\n    //     \"transaction_id\": null,\r\n    //     \"account_code\": \"XYZ1230987@SBI000007\",\r\n    //     \"net_amount\": 1000,\r\n    //     \"gross_amount\": 1000,\r\n    //     \"individual\": {\r\n    //       \"name\": \"LC\",\r\n    //       \"email\": null,\r\n    //       \"phone\": \"9999999999\",\r\n    //       \"pin\": null,\r\n    //       \"address\": \"pg.citya\"\r\n    //     },\r\n    //     \"additional_details\": null,\r\n    //     \"audit_details\": {\r\n    //       \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n    //       \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n    //       \"createdTime\": 1709201812840,\r\n    //       \"lastModifiedTime\": 1709201812840\r\n    //     },\r\n    //     \"children\": null\r\n    //   }\r\n    // ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create-Id missing",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"{{receiverId}}\",\r\n    \"is_msg_encrypted\": false\r\n  },\r\n  \"message\": {\r\n    // \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n    \"function_code\": null,\r\n    \"administration_code\": null,\r\n    \"recipient_segment_code\": null,\r\n    \"economic_segment_code\": null,\r\n    \"source_of_fund_code\": null,\r\n    \"target_segment_code\": null,\r\n    \"currency_code\": null,\r\n    \"locale_code\": null,\r\n    \"status\": {\r\n      \"status_code\": \"ERROR\",\r\n      \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    },\r\n    \"location_code\": \"pg.citya\",\r\n    \"program_code\": \"PG/2023-24/000358\",\r\n    \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n    \"parent_id\": null,\r\n    \"sanction_id\": null,\r\n    \"transaction_id\": null,\r\n    \"account_code\": null,\r\n    \"net_amount\": 9870,\r\n    \"gross_amount\": 9870,\r\n    \"individual\": null,\r\n    \"additional_details\": {\r\n      \"billNumbers\": [\r\n        \"PB/2023-24/000563\"\r\n      ],\r\n      \"referenceIds\": [\r\n        \"WO/2023-24/000955_PR_000496\"\r\n      ]\r\n    },\r\n    \"audit_details\": {\r\n      \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n      \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n      \"createdTime\": 1709201812840,\r\n      \"lastModifiedTime\": 1709201812840\r\n    },\r\n    \"children\": [\r\n      {\r\n        // \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"333367679912@SBIN0000063\",\r\n        \"net_amount\": 8870,\r\n        \"gross_amount\": 8870,\r\n        \"individual\": {\r\n          \"name\": \"roso\",\r\n          \"email\": null,\r\n          \"phone\": \"9876678790\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      },\r\n      {\r\n        // \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"XYZ1230987@SBI000007\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"individual\": {\r\n          \"name\": \"LC\",\r\n          \"email\": null,\r\n          \"phone\": \"9999999999\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      }\r\n    ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create-location code missing",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"{{receiverId}}\",\r\n    \"is_msg_encrypted\": false\r\n  },\r\n  \"message\": {\r\n    \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n    \"function_code\": null,\r\n    \"administration_code\": null,\r\n    \"recipient_segment_code\": null,\r\n    \"economic_segment_code\": null,\r\n    \"source_of_fund_code\": null,\r\n    \"target_segment_code\": null,\r\n    \"currency_code\": null,\r\n    \"locale_code\": null,\r\n    \"status\": {\r\n      \"status_code\": \"ERROR\",\r\n      \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    },\r\n    // \"location_code\": \"pg.citya\",\r\n    \"program_code\": \"PG/2023-24/000358\",\r\n    \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n    \"parent_id\": null,\r\n    \"sanction_id\": null,\r\n    \"transaction_id\": null,\r\n    \"account_code\": null,\r\n    \"net_amount\": 9870,\r\n    \"gross_amount\": 9870,\r\n    \"individual\": null,\r\n    \"additional_details\": {\r\n      \"billNumbers\": [\r\n        \"PB/2023-24/000563\"\r\n      ],\r\n      \"referenceIds\": [\r\n        \"WO/2023-24/000955_PR_000496\"\r\n      ]\r\n    },\r\n    \"audit_details\": {\r\n      \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n      \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n      \"createdTime\": 1709201812840,\r\n      \"lastModifiedTime\": 1709201812840\r\n    },\r\n    \"children\": [\r\n      {\r\n        \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        // \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"333367679912@SBIN0000063\",\r\n        \"net_amount\": 8870,\r\n        \"gross_amount\": 8870,\r\n        \"individual\": {\r\n          \"name\": \"roso\",\r\n          \"email\": null,\r\n          \"phone\": \"9876678790\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      },\r\n      {\r\n        \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        // \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"XYZ1230987@SBI000007\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"individual\": {\r\n          \"name\": \"LC\",\r\n          \"email\": null,\r\n          \"phone\": \"9999999999\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      }\r\n    ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create-program code missing",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"{{receiverId}}\",\r\n    \"is_msg_encrypted\": false\r\n  },\r\n  \"message\": {\r\n    \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n    \"function_code\": null,\r\n    \"administration_code\": null,\r\n    \"recipient_segment_code\": null,\r\n    \"economic_segment_code\": null,\r\n    \"source_of_fund_code\": null,\r\n    \"target_segment_code\": null,\r\n    \"currency_code\": null,\r\n    \"locale_code\": null,\r\n    \"status\": {\r\n      \"status_code\": \"ERROR\",\r\n      \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    },\r\n    \"location_code\": \"pg.citya\",\r\n    // \"program_code\": \"PG/2023-24/000358\",\r\n    \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n    \"parent_id\": null,\r\n    \"sanction_id\": null,\r\n    \"transaction_id\": null,\r\n    \"account_code\": null,\r\n    \"net_amount\": 9870,\r\n    \"gross_amount\": 9870,\r\n    \"individual\": null,\r\n    \"additional_details\": {\r\n      \"billNumbers\": [\r\n        \"PB/2023-24/000563\"\r\n      ],\r\n      \"referenceIds\": [\r\n        \"WO/2023-24/000955_PR_000496\"\r\n      ]\r\n    },\r\n    \"audit_details\": {\r\n      \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n      \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n      \"createdTime\": 1709201812840,\r\n      \"lastModifiedTime\": 1709201812840\r\n    },\r\n    \"children\": [\r\n      {\r\n        \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        // \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"333367679912@SBIN0000063\",\r\n        \"net_amount\": 8870,\r\n        \"gross_amount\": 8870,\r\n        \"individual\": {\r\n          \"name\": \"roso\",\r\n          \"email\": null,\r\n          \"phone\": \"9876678790\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      },\r\n      {\r\n        \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        // \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"XYZ1230987@SBI000007\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"individual\": {\r\n          \"name\": \"LC\",\r\n          \"email\": null,\r\n          \"phone\": \"9999999999\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      }\r\n    ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create-net amount missing",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"{{receiverId}}\",\r\n    \"is_msg_encrypted\": false\r\n  },\r\n  \"message\": {\r\n    \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n    \"function_code\": null,\r\n    \"administration_code\": null,\r\n    \"recipient_segment_code\": null,\r\n    \"economic_segment_code\": null,\r\n    \"source_of_fund_code\": null,\r\n    \"target_segment_code\": null,\r\n    \"currency_code\": null,\r\n    \"locale_code\": null,\r\n    \"status\": {\r\n      \"status_code\": \"ERROR\",\r\n      \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    },\r\n    \"location_code\": \"pg.citya\",\r\n    \"program_code\": \"PG/2023-24/000358\",\r\n    \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n    \"parent_id\": null,\r\n    \"sanction_id\": null,\r\n    \"transaction_id\": null,\r\n    \"account_code\": null,\r\n    // \"net_amount\": 9870,\r\n    \"gross_amount\": 9870,\r\n    \"individual\": null,\r\n    \"additional_details\": {\r\n      \"billNumbers\": [\r\n        \"PB/2023-24/000563\"\r\n      ],\r\n      \"referenceIds\": [\r\n        \"WO/2023-24/000955_PR_000496\"\r\n      ]\r\n    },\r\n    \"audit_details\": {\r\n      \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n      \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n      \"createdTime\": 1709201812840,\r\n      \"lastModifiedTime\": 1709201812840\r\n    },\r\n    \"children\": [\r\n      {\r\n        \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"333367679912@SBIN0000063\",\r\n        // \"net_amount\": 8870,\r\n        \"gross_amount\": 8870,\r\n        \"individual\": {\r\n          \"name\": \"roso\",\r\n          \"email\": null,\r\n          \"phone\": \"9876678790\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      },\r\n      {\r\n        \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"XYZ1230987@SBI000007\",\r\n        // \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"individual\": {\r\n          \"name\": \"LC\",\r\n          \"email\": null,\r\n          \"phone\": \"9999999999\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      }\r\n    ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create-gross amount missing",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"{{receiverId}}\",\r\n    \"is_msg_encrypted\": false\r\n  },\r\n  \"message\": {\r\n    \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n    \"function_code\": null,\r\n    \"administration_code\": null,\r\n    \"recipient_segment_code\": null,\r\n    \"economic_segment_code\": null,\r\n    \"source_of_fund_code\": null,\r\n    \"target_segment_code\": null,\r\n    \"currency_code\": null,\r\n    \"locale_code\": null,\r\n    \"status\": {\r\n      \"status_code\": \"ERROR\",\r\n      \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    },\r\n    \"location_code\": \"pg.citya\",\r\n    \"program_code\": \"PG/2023-24/000358\",\r\n    \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n    \"parent_id\": null,\r\n    \"sanction_id\": null,\r\n    \"transaction_id\": null,\r\n    \"account_code\": null,\r\n    \"net_amount\": 9870,\r\n    // \"gross_amount\": 9870,\r\n    \"individual\": null,\r\n    \"additional_details\": {\r\n      \"billNumbers\": [\r\n        \"PB/2023-24/000563\"\r\n      ],\r\n      \"referenceIds\": [\r\n        \"WO/2023-24/000955_PR_000496\"\r\n      ]\r\n    },\r\n    \"audit_details\": {\r\n      \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n      \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n      \"createdTime\": 1709201812840,\r\n      \"lastModifiedTime\": 1709201812840\r\n    },\r\n    \"children\": [\r\n      {\r\n        \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"333367679912@SBIN0000063\",\r\n        \"net_amount\": 8870,\r\n        // \"gross_amount\": 8870,\r\n        \"individual\": {\r\n          \"name\": \"roso\",\r\n          \"email\": null,\r\n          \"phone\": \"9876678790\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      },\r\n      {\r\n        \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"XYZ1230987@SBI000007\",\r\n        \"net_amount\": 1000,\r\n        // \"gross_amount\": 1000,\r\n        \"individual\": {\r\n          \"name\": \"LC\",\r\n          \"email\": null,\r\n          \"phone\": \"9999999999\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      }\r\n    ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create-Status Code missing",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"{{receiverId}}\",\r\n    \"is_msg_encrypted\": false\r\n  },\r\n  \"message\": {\r\n    \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n    \"function_code\": null,\r\n    \"administration_code\": null,\r\n    \"recipient_segment_code\": null,\r\n    \"economic_segment_code\": null,\r\n    \"source_of_fund_code\": null,\r\n    \"target_segment_code\": null,\r\n    \"currency_code\": null,\r\n    \"locale_code\": null,\r\n    // \"status\": {\r\n    //   \"status_code\": \"ERROR\",\r\n    //   \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    // },\r\n    \"location_code\": \"pg.citya\",\r\n    \"program_code\": \"PG/2023-24/000358\",\r\n    \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n    \"parent_id\": null,\r\n    \"sanction_id\": null,\r\n    \"transaction_id\": null,\r\n    \"account_code\": null,\r\n    \"net_amount\": 9870,\r\n    \"gross_amount\": 9870,\r\n    \"individual\": null,\r\n    \"additional_details\": {\r\n      \"billNumbers\": [\r\n        \"PB/2023-24/000563\"\r\n      ],\r\n      \"referenceIds\": [\r\n        \"WO/2023-24/000955_PR_000496\"\r\n      ]\r\n    },\r\n    \"audit_details\": {\r\n      \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n      \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n      \"createdTime\": 1709201812840,\r\n      \"lastModifiedTime\": 1709201812840\r\n    },\r\n    \"children\": [\r\n      {\r\n        \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        // \"status\": {\r\n        //   \"status_code\": \"ERROR\",\r\n        //   \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        // },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"333367679912@SBIN0000063\",\r\n        \"net_amount\": 8870,\r\n        \"gross_amount\": 8870,\r\n        \"individual\": {\r\n          \"name\": \"roso\",\r\n          \"email\": null,\r\n          \"phone\": \"9876678790\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      },\r\n      {\r\n        \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        // \"status\": {\r\n        //   \"status_code\": \"ERROR\",\r\n        //   \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        // },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"XYZ1230987@SBI000007\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"individual\": {\r\n          \"name\": \"LC\",\r\n          \"email\": null,\r\n          \"phone\": \"9999999999\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      }\r\n    ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create-Individual missing",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"{{receiverId}}\",\r\n    \"is_msg_encrypted\": false\r\n  },\r\n  \"message\": {\r\n    \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n    \"function_code\": null,\r\n    \"administration_code\": null,\r\n    \"recipient_segment_code\": null,\r\n    \"economic_segment_code\": null,\r\n    \"source_of_fund_code\": null,\r\n    \"target_segment_code\": null,\r\n    \"currency_code\": null,\r\n    \"locale_code\": null,\r\n    \"status\": {\r\n      \"status_code\": \"ERROR\",\r\n      \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    },\r\n    \"location_code\": \"pg.citya\",\r\n    \"program_code\": \"PG/2023-24/000358\",\r\n    \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n    \"parent_id\": null,\r\n    \"sanction_id\": null,\r\n    \"transaction_id\": null,\r\n    \"account_code\": null,\r\n    \"net_amount\": 9870,\r\n    \"gross_amount\": 9870,\r\n    \"individual\": null,\r\n    \"additional_details\": {\r\n      \"billNumbers\": [\r\n        \"PB/2023-24/000563\"\r\n      ],\r\n      \"referenceIds\": [\r\n        \"WO/2023-24/000955_PR_000496\"\r\n      ]\r\n    },\r\n    \"audit_details\": {\r\n      \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n      \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n      \"createdTime\": 1709201812840,\r\n      \"lastModifiedTime\": 1709201812840\r\n    },\r\n    \"children\": [\r\n      {\r\n        \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"333367679912@SBIN0000063\",\r\n        \"net_amount\": 8870,\r\n        \"gross_amount\": 8870,\r\n        // \"individual\": {\r\n        //   \"name\": \"roso\",\r\n        //   \"email\": null,\r\n        //   \"phone\": \"9876678790\",\r\n        //   \"pin\": null,\r\n        //   \"address\": \"pg.citya\"\r\n        // },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      },\r\n      {\r\n        \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"XYZ1230987@SBI000007\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        // \"individual\": {\r\n        //   \"name\": \"LC\",\r\n        //   \"email\": null,\r\n        //   \"phone\": \"9999999999\",\r\n        //   \"pin\": null,\r\n        //   \"address\": \"pg.citya\"\r\n        // },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      }\r\n    ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create-name missing",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"{{receiverId}}\",\r\n    \"is_msg_encrypted\": false\r\n  },\r\n  \"message\": {\r\n    \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n    \"function_code\": null,\r\n    \"administration_code\": null,\r\n    \"recipient_segment_code\": null,\r\n    \"economic_segment_code\": null,\r\n    \"source_of_fund_code\": null,\r\n    \"target_segment_code\": null,\r\n    \"currency_code\": null,\r\n    \"locale_code\": null,\r\n    \"status\": {\r\n      \"status_code\": \"ERROR\",\r\n      \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    },\r\n    \"location_code\": \"pg.citya\",\r\n    \"program_code\": \"PG/2023-24/000358\",\r\n    \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n    \"parent_id\": null,\r\n    \"sanction_id\": null,\r\n    \"transaction_id\": null,\r\n    \"account_code\": null,\r\n    \"net_amount\": 9870,\r\n    \"gross_amount\": 9870,\r\n    \"individual\": null,\r\n    \"additional_details\": {\r\n      \"billNumbers\": [\r\n        \"PB/2023-24/000563\"\r\n      ],\r\n      \"referenceIds\": [\r\n        \"WO/2023-24/000955_PR_000496\"\r\n      ]\r\n    },\r\n    \"audit_details\": {\r\n      \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n      \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n      \"createdTime\": 1709201812840,\r\n      \"lastModifiedTime\": 1709201812840\r\n    },\r\n    \"children\": [\r\n      {\r\n        \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"333367679912@SBIN0000063\",\r\n        \"net_amount\": 8870,\r\n        \"gross_amount\": 8870,\r\n        \"individual\": {\r\n        //   \"name\": \"roso\",\r\n          \"email\": null,\r\n          \"phone\": \"9876678790\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      },\r\n      {\r\n        \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"XYZ1230987@SBI000007\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"individual\": {\r\n        //   \"name\": \"LC\",\r\n          \"email\": null,\r\n          \"phone\": \"9999999999\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      }\r\n    ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create-Phone missing",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"{{receiverId}}\",\r\n    \"is_msg_encrypted\": false\r\n  },\r\n  \"message\": {\r\n    \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n    \"function_code\": null,\r\n    \"administration_code\": null,\r\n    \"recipient_segment_code\": null,\r\n    \"economic_segment_code\": null,\r\n    \"source_of_fund_code\": null,\r\n    \"target_segment_code\": null,\r\n    \"currency_code\": null,\r\n    \"locale_code\": null,\r\n    \"status\": {\r\n      \"status_code\": \"ERROR\",\r\n      \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    },\r\n    \"location_code\": \"pg.citya\",\r\n    \"program_code\": \"PG/2023-24/000358\",\r\n    \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n    \"parent_id\": null,\r\n    \"sanction_id\": null,\r\n    \"transaction_id\": null,\r\n    \"account_code\": null,\r\n    \"net_amount\": 9870,\r\n    \"gross_amount\": 9870,\r\n    \"individual\": null,\r\n    \"additional_details\": {\r\n      \"billNumbers\": [\r\n        \"PB/2023-24/000563\"\r\n      ],\r\n      \"referenceIds\": [\r\n        \"WO/2023-24/000955_PR_000496\"\r\n      ]\r\n    },\r\n    \"audit_details\": {\r\n      \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n      \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n      \"createdTime\": 1709201812840,\r\n      \"lastModifiedTime\": 1709201812840\r\n    },\r\n    \"children\": [\r\n      {\r\n        \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"333367679912@SBIN0000063\",\r\n        \"net_amount\": 8870,\r\n        \"gross_amount\": 8870,\r\n        \"individual\": {\r\n          \"name\": \"roso\",\r\n          \"email\": null,\r\n        //   \"phone\": \"9876678790\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      },\r\n      {\r\n        \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"XYZ1230987@SBI000007\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"individual\": {\r\n          \"name\": \"LC\",\r\n          \"email\": null,\r\n        //   \"phone\": \"9999999999\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      }\r\n    ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create-Address missing",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"{{receiverId}}\",\r\n    \"is_msg_encrypted\": false\r\n  },\r\n  \"message\": {\r\n    \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n    \"function_code\": null,\r\n    \"administration_code\": null,\r\n    \"recipient_segment_code\": null,\r\n    \"economic_segment_code\": null,\r\n    \"source_of_fund_code\": null,\r\n    \"target_segment_code\": null,\r\n    \"currency_code\": null,\r\n    \"locale_code\": null,\r\n    \"status\": {\r\n      \"status_code\": \"ERROR\",\r\n      \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    },\r\n    \"location_code\": \"pg.citya\",\r\n    \"program_code\": \"PG/2023-24/000358\",\r\n    \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n    \"parent_id\": null,\r\n    \"sanction_id\": null,\r\n    \"transaction_id\": null,\r\n    \"account_code\": null,\r\n    \"net_amount\": 9870,\r\n    \"gross_amount\": 9870,\r\n    \"individual\": null,\r\n    \"additional_details\": {\r\n      \"billNumbers\": [\r\n        \"PB/2023-24/000563\"\r\n      ],\r\n      \"referenceIds\": [\r\n        \"WO/2023-24/000955_PR_000496\"\r\n      ]\r\n    },\r\n    \"audit_details\": {\r\n      \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n      \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n      \"createdTime\": 1709201812840,\r\n      \"lastModifiedTime\": 1709201812840\r\n    },\r\n    \"children\": [\r\n      {\r\n        \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"333367679912@SBIN0000063\",\r\n        \"net_amount\": 8870,\r\n        \"gross_amount\": 8870,\r\n        \"individual\": {\r\n          \"name\": \"roso\",\r\n          \"email\": null,\r\n          \"phone\": \"9876678790\",\r\n          \"pin\": null\r\n        //   \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      },\r\n      {\r\n        \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"XYZ1230987@SBI000007\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"individual\": {\r\n          \"name\": \"LC\",\r\n          \"email\": null,\r\n          \"phone\": \"9999999999\",\r\n          \"pin\": null\r\n        //   \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      }\r\n    ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create-Target Id missing",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"{{receiverId}}\",\r\n    \"is_msg_encrypted\": false\r\n  },\r\n  \"message\": {\r\n    \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n    \"function_code\": null,\r\n    \"administration_code\": null,\r\n    \"recipient_segment_code\": null,\r\n    \"economic_segment_code\": null,\r\n    \"source_of_fund_code\": null,\r\n    \"target_segment_code\": null,\r\n    \"currency_code\": null,\r\n    \"locale_code\": null,\r\n    \"status\": {\r\n      \"status_code\": \"ERROR\",\r\n      \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    },\r\n    \"location_code\": \"pg.citya\",\r\n    \"program_code\": \"PG/2023-24/000358\",\r\n    // \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n    \"parent_id\": null,\r\n    \"sanction_id\": null,\r\n    \"transaction_id\": null,\r\n    \"account_code\": null,\r\n    \"net_amount\": 9870,\r\n    \"gross_amount\": 9870,\r\n    \"individual\": null,\r\n    \"additional_details\": {\r\n      \"billNumbers\": [\r\n        \"PB/2023-24/000563\"\r\n      ],\r\n      \"referenceIds\": [\r\n        \"WO/2023-24/000955_PR_000496\"\r\n      ]\r\n    },\r\n    \"audit_details\": {\r\n      \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n      \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n      \"createdTime\": 1709201812840,\r\n      \"lastModifiedTime\": 1709201812840\r\n    },\r\n    \"children\": [\r\n      {\r\n        \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        // \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"333367679912@SBIN0000063\",\r\n        \"net_amount\": 8870,\r\n        \"gross_amount\": 8870,\r\n        \"individual\": {\r\n          \"name\": \"roso\",\r\n          \"email\": null,\r\n          \"phone\": \"9876678790\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      },\r\n      {\r\n        \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        // \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"XYZ1230987@SBI000007\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"individual\": {\r\n          \"name\": \"LC\",\r\n          \"email\": null,\r\n          \"phone\": \"9999999999\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      }\r\n    ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "on-disburse-create-child amount addition should be equal to parent amount",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n  \"header\": {\r\n    \"message_id\": \"2dc5dee0-eeb1-4855-82f8-4590c5ef4360\",\r\n    \"message_ts\": 1709201812700,\r\n    \"message_type\": \"on-disburse\",\r\n    \"action\": \"create\",\r\n    \"sender_id\": \"{{senderId}}\",\r\n    \"sender_uri\": \"program@https://unified-qa.digit.org\",\r\n    \"receiver_id\": \"{{receiverId}}\",\r\n    \"is_msg_encrypted\": false\r\n  },\r\n  \"message\": {\r\n    \"id\": \"14d961d1-f2f6-4e2e-9488-97ad80ee5f96\",\r\n    \"function_code\": null,\r\n    \"administration_code\": null,\r\n    \"recipient_segment_code\": null,\r\n    \"economic_segment_code\": null,\r\n    \"source_of_fund_code\": null,\r\n    \"target_segment_code\": null,\r\n    \"currency_code\": null,\r\n    \"locale_code\": null,\r\n    \"status\": {\r\n      \"status_code\": \"ERROR\",\r\n      \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n    },\r\n    \"location_code\": \"pg.citya\",\r\n    \"program_code\": \"PG/2023-24/000358\",\r\n    \"target_id\": \"EP/1013/2023-24/02/29/000095\",\r\n    \"parent_id\": null,\r\n    \"sanction_id\": null,\r\n    \"transaction_id\": null,\r\n    \"account_code\": null,\r\n    \"net_amount\": 9870,\r\n    \"gross_amount\": 9870,\r\n    \"individual\": null,\r\n    \"additional_details\": {\r\n      \"billNumbers\": [\r\n        \"PB/2023-24/000563\"\r\n      ],\r\n      \"referenceIds\": [\r\n        \"WO/2023-24/000955_PR_000496\"\r\n      ]\r\n    },\r\n    \"audit_details\": {\r\n      \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n      \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n      \"createdTime\": 1709201812840,\r\n      \"lastModifiedTime\": 1709201812840\r\n    },\r\n    \"children\": [\r\n      {\r\n        \"id\": \"cfd3f7e8-a1a6-49be-9884-9788a1ceddf6\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"47fec55a-3cfc-440c-b6d7-ea28e6ca6979\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"333367679912@SBIN0000063\",\r\n        \"net_amount\": 8870,\r\n        \"gross_amount\": 8870,\r\n        \"individual\": {\r\n          \"name\": \"roso\",\r\n          \"email\": null,\r\n          \"phone\": \"9876678790\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      },\r\n      {\r\n        \"id\": \"b0f4c2ae-16a5-4eab-a6f6-642f0a9a1d68\",\r\n        \"function_code\": null,\r\n        \"administration_code\": null,\r\n        \"recipient_segment_code\": null,\r\n        \"economic_segment_code\": null,\r\n        \"source_of_fund_code\": null,\r\n        \"target_segment_code\": null,\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"en_IN\",\r\n        \"status\": {\r\n          \"status_code\": \"ERROR\",\r\n          \"status_message\": \"NO_SANCTION_AVAILABLE_FOR_AMOUNT no sanction available for disburse amount 9870.0\"\r\n        },\r\n        \"location_code\": \"pg.citya\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"c926873e-5d32-469d-9661-1591981732b1\",\r\n        \"parent_id\": null,\r\n        \"sanction_id\": null,\r\n        \"transaction_id\": null,\r\n        \"account_code\": \"XYZ1230987@SBI000007\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1010,\r\n        \"individual\": {\r\n          \"name\": \"LC\",\r\n          \"email\": null,\r\n          \"phone\": \"9999999999\",\r\n          \"pin\": null,\r\n          \"address\": \"pg.citya\"\r\n        },\r\n        \"additional_details\": null,\r\n        \"audit_details\": {\r\n          \"createdBy\": \"program@https://unified-dev.digit.org\",\r\n          \"lastModifiedBy\": \"program@https://unified-dev.digit.org\",\r\n          \"createdTime\": 1709201812840,\r\n          \"lastModifiedTime\": 1709201812840\r\n        },\r\n        \"children\": null\r\n      }\r\n    ]\r\n  }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_create"
					]
				}
			},
			"response": []
		},
		{
			"name": "On-disburse_update-Approved",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-disburse\",\r\n        \"action\": \"update\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{disbursemantId}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"EP/0/2023-24/08/14/000267\",\r\n        \"transaction_id\": \"PI/2023-24/00001,BENF/2023-24/00001\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"individual\": {\r\n            \"name\": \"string\",\r\n            \"email\": \"string\",\r\n            \"phone\": \"string\",\r\n            \"pin\": \"string\",\r\n            \"address\": \"string\"\r\n        },\r\n        \"children\": [\r\n            {\r\n                \"id\":\"{{disbursemantId}}\",\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"PG/2023-24/000358\",\r\n                \"target_id\": \"EP/0/2023-24/08/14/000267\",\r\n                \"transaction_id\": \"PI/2023-24/00001,BENF/2023-24/00001\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": 1000,\r\n                \"gross_amount\": 1000,\r\n                \"individual\": {\r\n                    \"name\": \"string\",\r\n                    \"email\": \"string\",\r\n                    \"phone\": \"string\",\r\n                    \"pin\": \"string\",\r\n                    \"address\": \"string\"\r\n                },\r\n                \"status\": {\r\n                    \"status_code\": \"APPROVED\",\r\n                    \"status_message\": \"APPROVED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"FC001\",\r\n                \"administration_code\": \"AC002\",\r\n                \"recipient_segment_code\": \"RSC003\",\r\n                \"economic_segment_code\": \"ESC004\",\r\n                \"source_of_fund_code\": \"SFC005\",\r\n                \"target_segment_code\": \"TSC006\",\r\n                \"currency_code\": \"INR\",\r\n                \"locale_code\": \"LC007\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"APPROVED\",\r\n            \"status_message\": \"APPROVED\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "On-disburse_update-successful",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-disburse\",\r\n        \"action\": \"update\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{disbursemantId}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"EP/0/2023-24/08/14/000267\",\r\n        \"transaction_id\": \"PI/2023-24/00001,BENF/2023-24/00001\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"individual\": {\r\n            \"name\": \"string\",\r\n            \"email\": \"string\",\r\n            \"phone\": \"string\",\r\n            \"pin\": \"string\",\r\n            \"address\": \"string\"\r\n        },\r\n        \"children\": [\r\n            {\r\n                \"id\":\"{{disbursemantId}}\",\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"PG/2023-24/000358\",\r\n                \"target_id\": \"EP/0/2023-24/08/14/000267\",\r\n                \"transaction_id\": \"PI/2023-24/00001,BENF/2023-24/00001\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": 1000,\r\n                \"gross_amount\": 1000,\r\n                \"individual\": {\r\n                    \"name\": \"string\",\r\n                    \"email\": \"string\",\r\n                    \"phone\": \"string\",\r\n                    \"pin\": \"string\",\r\n                    \"address\": \"string\"\r\n                },\r\n                \"status\": {\r\n                    \"status_code\": \"SUCCESSFUL\",\r\n                    \"status_message\": \"SUCCESSFUL\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"FC001\",\r\n                \"administration_code\": \"AC002\",\r\n                \"recipient_segment_code\": \"RSC003\",\r\n                \"economic_segment_code\": \"ESC004\",\r\n                \"source_of_fund_code\": \"SFC005\",\r\n                \"target_segment_code\": \"TSC006\",\r\n                \"currency_code\": \"INR\",\r\n                \"locale_code\": \"LC007\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"SUCCESSFUL\",\r\n            \"status_message\": \"SUCCESSFUL\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url_2}}/program-service/v1/on-disburse/_update",
					"host": [
						"{{base_url_2}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "On-disburse_update-PARTIAL",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\":\"on-disburse\",\r\n        \"action\": \"update\",\r\n        \"sender_id\": \"{{senderId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{receiverId}}\"\r\n    },\r\n    \"message\": {\r\n        \"id\":\"{{disbursemantId}}\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"PG/2023-24/000358\",\r\n        \"target_id\": \"EP/0/2023-24/08/14/000267\",\r\n        \"transaction_id\": \"PI/2023-24/00001,BENF/2023-24/00001\",\r\n        \"sanction_id\": \"{{sanctionId}}\",\r\n        \"account_code\": \"1234567890@SBIN0003491\",\r\n        \"net_amount\": 1000,\r\n        \"gross_amount\": 1000,\r\n        \"individual\": {\r\n            \"name\": \"string\",\r\n            \"email\": \"string\",\r\n            \"phone\": \"string\",\r\n            \"pin\": \"string\",\r\n            \"address\": \"string\"\r\n        },\r\n        \"children\": [\r\n            {\r\n                \"id\":\"{{disbursemantId}}\",\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"PG/2023-24/000358\",\r\n                \"target_id\": \"EP/0/2023-24/08/14/000267\",\r\n                \"transaction_id\": \"PI/2023-24/00001,BENF/2023-24/00001\",\r\n                \"sanction_id\": \"{{sanctionId}}\",\r\n                \"account_code\": \"1234567890@SBIN0003491\",\r\n                \"net_amount\": 1000,\r\n                \"gross_amount\": 1000,\r\n                \"individual\": {\r\n                    \"name\": \"string\",\r\n                    \"email\": \"string\",\r\n                    \"phone\": \"string\",\r\n                    \"pin\": \"string\",\r\n                    \"address\": \"string\"\r\n                },\r\n                \"status\": {\r\n                    \"status_code\": \"FAILED\",\r\n                    \"status_message\": \"FAILED\"\r\n                },\r\n                \"additional_details\": {},\r\n                \"function_code\": \"FC001\",\r\n                \"administration_code\": \"AC002\",\r\n                \"recipient_segment_code\": \"RSC003\",\r\n                \"economic_segment_code\": \"ESC004\",\r\n                \"source_of_fund_code\": \"SFC005\",\r\n                \"target_segment_code\": \"TSC006\",\r\n                \"currency_code\": \"INR\",\r\n                \"locale_code\": \"LC007\"\r\n            }\r\n        ],\r\n        \"status\": {\r\n            \"status_code\": \"SUCCESSFUL\",\r\n            \"status_message\": \"SUCCESSFUL\"\r\n        },\r\n        \"additional_details\": {},\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/on-disburse/_update",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"on-disburse",
						"_update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Program-disburse_create-",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"signature\": \"TgE1hcA2E+YPMdPGz4vveKQpR0x+pgzRTlet52qh63Kekr71vWWScXqaRFtQW64uRFZGBUhHYYZQ2y6LffwnNOOQhhssaThhqVBhXNEwX9i75SNYXi5XSJVDYzSyHrhF20HW6RE9mAVWdc80i7d+FXlh+b/U+fnj+SrZ2s6Xd0WUZvU29LgqeUpyznlWLu1mDdJxNZavsDLWmxjTnknqBjDvwSc35WhFDhXDA2lWmm8YpZ1Y6TBmvvtVS7mAOTnhFy9sdCbrLcfXk5QWIsdzlvPqlkvdwEf30OZ6ewb680Aj3hO2OT5LCv7iLyz7C7srnB9lJT5gXiw+eSnktPXlDA==\",\r\n    \"header\": {\r\n        \"message_id\": \"123\",\r\n        \"message_ts\": \"1708428280\",\r\n        \"message_type\": \"disburse\",\r\n        \"action\": \"create\",\r\n        \"sender_id\": \"{{receiverId}}\",\r\n        \"sender_uri\": \"https://spp.example.org/{namespace}/callback/on-search\",\r\n        \"receiver_id\": \"{{senderId}}\"\r\n    },\r\n    \"message\": {\r\n        \"function_code\": \"FC001\",\r\n        \"administration_code\": \"AC002\",\r\n        \"recipient_segment_code\": \"RSC003\",\r\n        \"economic_segment_code\": \"ESC004\",\r\n        \"source_of_fund_code\": \"SFC005\",\r\n        \"target_segment_code\": \"TSC006\",\r\n        \"currency_code\": \"INR\",\r\n        \"locale_code\": \"LC007\",\r\n        \"location_code\": \"{{tenantId}}\",\r\n        \"program_code\": \"PG/2023-24/000351\",\r\n        \"target_id\": \"targetId2\",\r\n        \"transaction_id\": \"taransactionId\",\r\n        \"sanction_id\": \"fad03304-988b-4256-aada-5d5ecda2af5b\",\r\n        \"account_code\": \"string\",\r\n        \"net_amount\": 50000,\r\n        \"gross_amount\": 50000,\r\n        \"individual\": {\r\n            \"name\": \"string\",\r\n            \"email\": \"string@email\",\r\n            \"phone\": \"4983284923\",\r\n            \"gender\": \"MALE\",\r\n            \"pin\": \"743848\",\r\n            \"address\": \"sdjfksadjf\"\r\n        },\r\n        \"disbursements\": [\r\n            {\r\n                \"function_code\": \"FC001\",\r\n                \"administration_code\": \"AC002\",\r\n                \"recipient_segment_code\": \"RSC003\",\r\n                \"economic_segment_code\": \"ESC004\",\r\n                \"source_of_fund_code\": \"SFC005\",\r\n                \"target_segment_code\": \"TSC006\",\r\n                \"currency_code\": \"INR\",\r\n                \"locale_code\": \"LC007\",\r\n                \"location_code\": \"{{tenantId}}\",\r\n                \"program_code\": \"PG/2023-24/000351\",\r\n                \"target_id\": \"targetId2\",\r\n                \"transaction_id\": \"taransactionId\",\r\n                \"sanction_id\": \"fad03304-988b-4256-aada-5d5ecda2af5b\",\r\n                \"account_code\": \"string\",\r\n                \"net_amount\": 50000,\r\n                \"gross_amount\": 50000,\r\n                \"individual\": {\r\n                    \"name\": \"string\",\r\n                    \"email\": \"string@email\",\r\n                    \"phone\": \"4983284923\",\r\n                    \"gender\": \"MALE\",\r\n                    \"pin\": \"743848\",\r\n                    \"address\": \"sdjfksadjf\"\r\n                },\r\n                \"disbursements\": [\r\n                    {}\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/program-service/v1/disburse/_create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"program-service",
						"v1",
						"disburse",
						"_create"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Id",
			"value": "",
			"type": "string"
		},
		{
			"key": "senderId",
			"value": "program@https://unified-qa.digit.org",
			"type": "string"
		},
		{
			"key": "receiverId",
			"value": "program@https://unified-dev.digit.org",
			"type": "string"
		},
		{
			"key": "programsObject",
			"value": ""
		},
		{
			"key": "pgCode",
			"value": ""
		},
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "sanctionId",
			"value": ""
		},
		{
			"key": "createdBy",
			"value": ""
		},
		{
			"key": "lastModifiedBy",
			"value": ""
		},
		{
			"key": "createdTime",
			"value": ""
		},
		{
			"key": "lastModifiedTime",
			"value": ""
		},
		{
			"key": "allocationId",
			"value": ""
		},
		{
			"key": "disburseObject",
			"value": ""
		},
		{
			"key": "disbursemantId",
			"value": ""
		},
		{
			"key": "targetId",
			"value": ""
		},
		{
			"key": "sanctionAmount",
			"value": ""
		},
		{
			"key": "id",
			"value": ""
		},
		{
			"key": "pgId",
			"value": ""
		},
		{
			"key": "type",
			"value": ""
		},
		{
			"key": "parentId",
			"value": ""
		},
		{
			"key": "description",
			"value": ""
		},
		{
			"key": "startDate",
			"value": ""
		},
		{
			"key": "endDate",
			"value": ""
		},
		{
			"key": "funCode",
			"value": ""
		},
		{
			"key": "adminCode",
			"value": ""
		},
		{
			"key": "recSegCode",
			"value": ""
		},
		{
			"key": "ecoSegCode",
			"value": ""
		},
		{
			"key": "sourceFundCode",
			"value": ""
		},
		{
			"key": "targetCode",
			"value": ""
		},
		{
			"key": "currency",
			"value": ""
		},
		{
			"key": "loCode",
			"value": ""
		},
		{
			"key": "netAmount",
			"value": ""
		},
		{
			"key": "grossAmount",
			"value": ""
		},
		{
			"key": "allocationType",
			"value": ""
		},
		{
			"key": "childrenId",
			"value": ""
		}
	]
}